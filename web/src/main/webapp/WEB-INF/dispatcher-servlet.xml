<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd"
       default-lazy-init="true">
	
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.dao.DataAccessException">
                    dataAccessFailure
                </prop>
            </props>
        </property>
    </bean>
    
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="2147483648"/>
    </bean>
    
    <bean id="propertiesMessageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="ApplicationResources"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="0"/>
        <property name="fallbackToSystemLocale" value="true"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>

    <bean id="messageSource" class="com.mds.common.webapp.util.DatabaseMessageSource">
        <property name="parentMessageSource" ref="propertiesMessageSource"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>
    
    <mvc:interceptors>
	    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
	      <property name="paramName" value="locale" />
	    </bean>
	    <bean class="org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor">
            <constructor-arg ref="conversionService"/>
        </bean>
        <bean class="com.mds.common.web.interceptor.SetCommonDataInterceptor">
            <property name="excludeUrlPatterns">
                <value>
                    /sys/polling
                </value>
            </property>
        </bean>
	</mvc:interceptors>
	
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
	    <property name="defaultLocale" value="en"/>
	</bean>
	    
    <!-- <bean name="SpringContextHolder" class="com.mds.util.SpringContextHolder" scope="singleton"></bean> -->

    <context:component-scan base-package="com.mds.*.webapp"/>
    
    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven validator="beanValidator" conversion-service="conversionService" content-negotiation-manager="contentNegotiationManager" enable-matrix-variables="true">
    	<!-- 异步支持 默认30秒超时 -->
        <mvc:async-support default-timeout="30000" task-executor="executor"/>

        <mvc:message-converters register-defaults="true">
            <!-- StringHttpMessageConverter编码为UTF-8，防止乱码 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
                <property name = "supportedMediaTypes">
                    <list>
                        <bean class="org.springframework.http.MediaType">
                            <constructor-arg index="0" value="text"/>
                            <constructor-arg index="1" value="plain"/>
                            <constructor-arg index="2" value="UTF-8"/>
                        </bean>
                        <bean class="org.springframework.http.MediaType">
                            <constructor-arg index="0" value="*"/>
                            <constructor-arg index="1" value="*"/>
                            <constructor-arg index="2" value="UTF-8"/>
                        </bean>
                    </list>
                </property>
            </bean>

            <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
            <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
                <!--<property name="serializerFeature">-->
                <!--这个地方加上这个功能吧，能自己配置一些东西，比如时间的格式化，null输出""等等-->
                <!--</property>-->
            </bean>
        </mvc:message-converters>
   		<mvc:argument-resolvers>
            <bean class="com.mds.common.web.bind.method.annotation.PageableMethodArgumentResolver"/>
            <bean class="com.mds.common.web.bind.method.annotation.SearchableMethodArgumentResolver"/>
            <!-- <bean class="com.mds.common.web.bind.method.annotation.FormModelMethodArgumentResolver"/> -->
            <bean class="com.mds.sys.webapp.bind.method.CurrentUserMethodArgumentResolver"/>
        </mvc:argument-resolvers>
   </mvc:annotation-driven>
   
	 <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">  
	 	<property name="messageConverters">  
	        <list>  
	               <ref bean="mappingJacksonHttpMessageConverter" />  
	        </list>  
	    </property>  
	</bean>  
         
 <bean id="mappingJacksonHttpMessageConverter"  class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
      <property name = "supportedMediaTypes">  
	     <list>
	       <bean class="org.springframework.http.MediaType">  
	        <constructor-arg index="0" value="text"/>  
	        <constructor-arg index="1" value="plain"/>  
	        <constructor-arg index="2" value="UTF-8"/>  
	       </bean>  
	       <bean class="org.springframework.http.MediaType">  
	        <constructor-arg index="0" value="*"/>  
	        <constructor-arg index="1" value="*"/>  
	        <constructor-arg index="2" value="UTF-8"/>  
	       </bean>  
	       <bean class="org.springframework.http.MediaType">  
	        <constructor-arg index="0" value="text"/>  
	        <constructor-arg index="1" value="*"/>  
	        <constructor-arg index="2" value="UTF-8"/>  
	       </bean>  
	        <bean class="org.springframework.http.MediaType">  
	        <constructor-arg index="0" value="application"/>  
	        <constructor-arg index="1" value="json"/>  
	        <constructor-arg index="2" value="UTF-8"/>  
	       </bean>  
	     </list>  
  </property>  
 </bean>
    
    <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler/>

	<!-- Then configure Spring to map requests for /webjars to the /META-INF/resources/webjars directory of all the JARs in the CLASSPATH-->
	<!-- <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/> -->
	
    <!-- Convenient way to map URLs to JSPs w/o having a Controller -->
    <mvc:view-controller path="/sch/calendarview" view-name="sch/calendarview"/>
    <mvc:view-controller path="/sys/activeUsers" view-name="sys/activeUsers"/>
    <!-- <mvc:view-controller path="/home" view-name="home"/> -->
    
    <!-- 内容协商管理器  -->
    <!--1、首先检查路径扩展名（如my.pdf）；2、其次检查Parameter（如my?format=pdf）；3、检查Accept Header-->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <!-- 扩展名至mimeType的映射,即 /user.json => application/json -->
        <property name="favorPathExtension" value="true"/>
        <!-- 用于开启 /userinfo/123?format=json 的支持 -->
        <property name="favorParameter" value="true"/>
        <property name="parameterName" value="format"/>
        <!-- 是否忽略Accept Header -->
        <property name="ignoreAcceptHeader" value="false"/>

        <property name="mediaTypes"> <!--扩展名到MIME的映射；favorPathExtension, favorParameter是true时起作用  -->
            <value>
                json=application/json
                xml=application/xml
                html=text/html
            </value>
        </property>
        <!-- 默认的content type -->
        <property name="defaultContentType" value="text/html"/>
    </bean>

    <!-- View Resolver for JSPs -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="requestContextAttribute" value="rc"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
        
    <!-- Add additional controller beans here -->
</beans>

<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1"
             xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">

    <persistence-unit name="ApplicationEntityManager" transaction-type="RESOURCE_LOCAL">
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
	    <class>com.mds.common.model.BaseObject</class>
		<class>com.mds.common.model.BaseEntity</class>
		<class>com.mds.common.model.AbstractEntity</class>
		<class>com.mds.common.model.IdEntity</class>
		<class>com.mds.common.repository.hibernate.type.CollectionToStringUserType</class>
        <class>com.mds.sys.model.User</class>
        <class>com.mds.sys.model.Role</class>
        <!-- <shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode> -->
        <!-- 
        Adding more <class>f.q.c.Name</class> elements here is not required.  
        The annotated classes will still be detected, as can be observed in the 
        following log output:
        
        INFO [main] Ejb3Configuration.scanForClasses(652) | found EJB3 Entity bean: com.mycompany.model.Person
        
        That being said, it will still work if you do add your <class> 
        declarations here for clarity, simply as a way to explicitly see all the 
        classes that are mapped as persistent entities.  Do whatever blows your 
        skirt up.
        -->
        <!-- <properties>
             <property name="hibernate.ejb.interceptor"
                      value="com.mds.common.dao.hibernate.MultiTenantEntityInterceptor" />
        </properties> -->
    </persistence-unit>
    
</persistence>

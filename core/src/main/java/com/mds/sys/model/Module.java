/**
 * Copyright (c) 2016-2017 https://github.com/chinamds
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 */
// Created using LayerGen 4.0

package com.mds.sys.model;

import com.mds.common.model.DataEntity;
import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.common.collect.Lists;
import com.mds.common.model.JsonDateSerializer;
import com.mds.common.model.TreeEntity;
import com.mds.common.utils.excel.annotation.ExcelField;
import com.mds.i18n.model.NeutralResource;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;
import org.hibernate.annotations.Type;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.bridge.builtin.IntegerBridge;
import  org.apache.commons.lang.builder.HashCodeBuilder;
import  org.apache.commons.lang.builder.EqualsBuilder;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.CascadeType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import javax.xml.bind.annotation.XmlRootElement;

import java.io.Serializable;
import java.math.BigDecimal;

@Entity
@Table(name="sys_module")
@Indexed
@XmlRootElement
public class Module extends DataEntity implements Serializable {
    /**
	 * 
	 */
	private static final long serialVersionUID = -4654434818881937463L;
	private String moduleName;
    private NeutralResource titleResource;
    private NeutralResource descriptionResource;
    private ModuleType moduleType;
    private Byte[] moduleIcon;
    private boolean enabled;
    
    private List<MenuFunction> menuFunctions = Lists.newArrayList();
    
  	
  	@JsonProperty(value = "ModeName")
  	@ExcelField(title="module.moduleName", align=1, sort=22)
  	@Column(name="module_name", length=256, nullable=false)
  	@Field
  	public String getModuleName() {
  		return moduleName;
  	}

  	public void setModuleName(String moduleName) {
  		this.moduleName = moduleName;
  	} 	
            
    @ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="title_resource_id", nullable=true)
	@NotFound(action = NotFoundAction.IGNORE)
	@JsonIgnore
    public NeutralResource getTitleResource(){
        return this.titleResource;
    }
    
    public void setTitleResource(NeutralResource titleResource){
        this.titleResource = titleResource;
    }
    
    @ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name="description_resource_id", nullable=true)
	@NotFound(action = NotFoundAction.IGNORE)
	@JsonIgnore
    public NeutralResource getDescriptionResource(){
        return this.descriptionResource;
    }
    
    public void setDescriptionResource(NeutralResource descriptionResource){
        this.descriptionResource = descriptionResource;
    }
    
    @Column(name="module_type", nullable = false, length = 3)
	@Enumerated(EnumType.STRING)
    @JsonProperty(value = "moduleType")
    @Field
    public ModuleType getModuleType(){
        return this.moduleType;
    }
    
    public void setModuleType(ModuleType moduleType){
        this.moduleType = moduleType;
    }
    
    @Basic(fetch = FetchType.LAZY )
    @Column(name="module_icon", length = 1048576)
	@JsonIgnore
    public Byte[] getModuleIcon(){
        return this.moduleIcon;
    }
    
    public void setModuleIcon(Byte[] moduleIcon){
        this.moduleIcon = moduleIcon;
    }
    
    @JsonProperty(value = "enabled")
    @Column(name="enabled", nullable=false)
    @Field
    public boolean getEnabled(){
        return this.enabled;
    }
    
    public void setEnabled(boolean enabled){
        this.enabled = enabled;
    }
    
    /**
	 * @return the menuFunctions
	 */
    @OneToMany(cascade=CascadeType.ALL, mappedBy = "module", fetch=FetchType.LAZY)
	@OrderBy(value="sort") 
	@Fetch(FetchMode.SUBSELECT)
	@NotFound(action = NotFoundAction.IGNORE)
	
	public List<MenuFunction> getMenuFunctions() {
		return menuFunctions;
	}

	/**
	 * @param menuFunctions the menuFunctions to set
	 */
	public void setMenuFunctions(List<MenuFunction> menuFunctions) {
		this.menuFunctions = menuFunctions;
	}

	/**
    * {@inheritDoc}
    */
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Module pojo = (Module)o;
        return (new EqualsBuilder()
             .append(enabled, pojo.enabled)
             .append(moduleName, pojo.moduleName)
             .append(titleResource, pojo.titleResource)
             .append(descriptionResource, pojo.descriptionResource)
             .append(moduleType, pojo.moduleType)
             .append(moduleIcon, pojo.moduleIcon)
             ).isEquals();
    }


    /**
    * {@inheritDoc}
    */
     public int hashCode() {
        return   new  HashCodeBuilder( 17 ,  37 )
             .append(enabled)
             .append(moduleName)
             .append(titleResource)
             .append(descriptionResource)
             .append(moduleType)
             .append(moduleIcon)
             .toHashCode();
    }


    /**
    * {@inheritDoc}
    */
     public String toString() {
        StringBuffer sb = new StringBuffer(getClass().getSimpleName());
        sb.append(" [");
        sb.append("id").append("='").append(getId()).append("', ");
        sb.append("enabled").append("='").append(getEnabled()).append("', ");
        sb.append("moduleName").append("='").append(getModuleName()).append("', ");
        sb.append("titleResource").append("='").append(getTitleResource()).append("', ");
        sb.append("descriptionResource").append("='").append(getDescriptionResource()).append("', ");
        sb.append("moduleType").append("='").append(getModuleType()).append("', ");
        sb.append("moduleIcon").append("='").append(getModuleIcon()).append("', ");
        sb.append("]");
        
        return sb.toString();
    }

}
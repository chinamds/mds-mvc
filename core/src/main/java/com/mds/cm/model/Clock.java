/**
 * Copyright (c) 2016-2017 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 */
// Created using LayerGen 4.0

package com.mds.cm.model;

import com.mds.common.model.DataEntity;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.mds.common.model.JsonDateSerializer;
import com.mds.sys.model.Organization;

import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;
import org.hibernate.annotations.Type;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.bridge.builtin.IntegerBridge;
import  org.apache.commons.lang.builder.HashCodeBuilder;
import  org.apache.commons.lang.builder.EqualsBuilder;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.CascadeType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import javax.xml.bind.annotation.XmlRootElement;

import java.io.Serializable;
import java.math.BigDecimal;

@Entity
@Table(name="cm_clock", uniqueConstraints = @UniqueConstraint(columnNames={"organization_id", "content_name"}))
@Indexed
@XmlRootElement
public class Clock extends DataEntity implements Serializable {
    /**
	 * 
	 */
	private static final long serialVersionUID = -6942200919822060246L;
	private String contentName;
    private String description;
    private short nBg;
    private String strTimeZone;
    private String strFile;
    private String strSkinType;
    private String strTimeZoneTitle;
    private String strDateSep;
    private String strTimeSep;
    private short nClockType;
    private short nDirection;
    private short nTimeType;
    private short nTop;
    private short nLeft;
    private short nRows;
    private short nCols;
    private short nDateBox;
    private short nWeek;
    private short nDate;
    private short nTime;
    private short nSkinType;
    private String strTextFontName;
    private short nTextFontSize;
    private int crTextFGColor;
    private boolean bFontBold;
    private boolean bFontItalic;
    private boolean bFontUnderline;
    private String strTitleFontName;
    private short nTitleFontSize;
    private int crTitleFGColor;
    private boolean bTitleBold;
    private boolean bTitleItalic;
    private boolean bTitleUnderline;
    private boolean bShowDate;
    private boolean bShowTime;
    private boolean bShowWeek;
    private boolean bShowDateHand;
    private boolean bShowSecondHand;
    private int crTextBKColor;
    private short nOffsetMins;
    private Integer crFaceGStart;
    private Integer crFaceGStop;
    private Integer crSecondHand;
    private Integer crMinuteHand;
    private Integer crHourHand;
    private Integer crFaceLine;
    private byte[] pClocks;
    
    private Organization organization;	// organization
    
    @ManyToOne(optional=true, fetch = FetchType.LAZY)
	@JoinColumn(name="organization_id", nullable=true)
	@NotFound(action = NotFoundAction.IGNORE)
	@JsonIgnore
	public Organization getOrganization() {
		return organization;
	}

	public void setOrganization(Organization organization) {
		this.organization = organization;
	}
     
    @JsonProperty(value = "contentName")
    @Column(name="content_name", nullable=false, length=50)
    @Field
    public String getContentName(){
        return this.contentName;
    }
    
    public void setContentName(String contentName){
        this.contentName = contentName;
    }
    
    @JsonProperty(value = "description")
    @Column(name="description", nullable=false, length=256)
    @Field
    public String getDescription(){
        return this.description;
    }
    
    public void setDescription(String description){
        this.description = description;
    }
    
    @JsonProperty(value = "nBg")
    @Column(name="nBg", nullable=false)
    @Field
    public short getBg(){
        return this.nBg;
    }
    
    public void setBg(short nBg){
        this.nBg = nBg;
    }
    
    @JsonProperty(value = "strTimeZone")
    @Column(name="strTimeZone", nullable=false, length=100)
    @Field
    public String getTimeZone(){
        return this.strTimeZone;
    }
    
    public void setTimeZone(String strTimeZone){
        this.strTimeZone = strTimeZone;
    }
    
    @JsonProperty(value = "strFile")
    @Column(name="strFile", nullable=false, length=1024)
    @Field
    public String getFile(){
        return this.strFile;
    }
    
    public void setFile(String strFile){
        this.strFile = strFile;
    }
    
    @JsonProperty(value = "strSkinType")
    @Column(name="strSkinType", nullable=false, length=100)
    @Field
    public String getSkinType(){
        return this.strSkinType;
    }
    
    public void setSkinType(String strSkinType){
        this.strSkinType = strSkinType;
    }
    
    @JsonProperty(value = "strTimeZoneTitle")
    @Column(name="strTimeZoneTitle", nullable=false, length=50)
    @Field
    public String getTimeZoneTitle(){
        return this.strTimeZoneTitle;
    }
    
    public void setTimeZoneTitle(String strTimeZoneTitle){
        this.strTimeZoneTitle = strTimeZoneTitle;
    }
    
    @JsonProperty(value = "strDateSep")
    @Column(name="strDateSep", nullable=false, length=1)
    @Field
    public String getDateSep(){
        return this.strDateSep;
    }
    
    public void setDateSep(String strDateSep){
        this.strDateSep = strDateSep;
    }
    
    @JsonProperty(value = "strTimeSep")
    @Column(name="strTimeSep", nullable=false, length=1)
    @Field
    public String getTimeSep(){
        return this.strTimeSep;
    }
    
    public void setTimeSep(String strTimeSep){
        this.strTimeSep = strTimeSep;
    }
    
    @JsonProperty(value = "nClockType")
    @Column(name="nClockType", nullable=false)
    @Field
    public short getClockType(){
        return this.nClockType;
    }
    
    public void setClockType(short nClockType){
        this.nClockType = nClockType;
    }
    
    @JsonProperty(value = "nDirection")
    @Column(name="nDirection", nullable=false)
    @Field
    public short getDirection(){
        return this.nDirection;
    }
    
    public void setDirection(short nDirection){
        this.nDirection = nDirection;
    }
    
    @JsonProperty(value = "nTimeType")
    @Column(name="nTimeType", nullable=false)
    @Field
    public short getTimeType(){
        return this.nTimeType;
    }
    
    public void setTimeType(short nTimeType){
        this.nTimeType = nTimeType;
    }
    
    @JsonProperty(value = "nTop")
    @Column(name="nTop", nullable=false)
    @Field
    public short getTop(){
        return this.nTop;
    }
    
    public void setTop(short nTop){
        this.nTop = nTop;
    }
    
    @JsonProperty(value = "nLeft")
    @Column(name="nLeft", nullable=false)
    @Field
    public short getLeft(){
        return this.nLeft;
    }
    
    public void setLeft(short nLeft){
        this.nLeft = nLeft;
    }
    
    @JsonProperty(value = "nRows")
    @Column(name="nRows", nullable=false)
    @Field
    public short getRows(){
        return this.nRows;
    }
    
    public void setRows(short nRows){
        this.nRows = nRows;
    }
    
    @JsonProperty(value = "nCols")
    @Column(name="nCols", nullable=false)
    @Field
    public short getCols(){
        return this.nCols;
    }
    
    public void setCols(short nCols){
        this.nCols = nCols;
    }
    
    @JsonProperty(value = "nDateBox")
    @Column(name="nDateBox", nullable=false)
    @Field
    public short getDateBox(){
        return this.nDateBox;
    }
    
    public void setDateBox(short nDateBox){
        this.nDateBox = nDateBox;
    }
    
    @JsonProperty(value = "nWeek")
    @Column(name="nWeek", nullable=false)
    @Field
    public short getWeek(){
        return this.nWeek;
    }
    
    public void setWeek(short nWeek){
        this.nWeek = nWeek;
    }
    
    @JsonProperty(value = "nDate")
    @Column(name="nDate", nullable=false)
    @Field
    public short getDate(){
        return this.nDate;
    }
    
    public void setDate(short nDate){
        this.nDate = nDate;
    }
    
    @JsonProperty(value = "nTime")
    @Column(name="nTime", nullable=false)
    @Field
    public short getTime(){
        return this.nTime;
    }
    
    public void setTime(short nTime){
        this.nTime = nTime;
    }
    
    @JsonProperty(value = "nSkinType")
    @Column(name="nSkinType", nullable=false)
    @Field
    public short getSkinTypeShort(){
        return this.nSkinType;
    }
    
    public void setSkinTypeShort(short nSkinType){
        this.nSkinType = nSkinType;
    }
    
    @JsonProperty(value = "strTextFontName")
    @Column(name="strTextFontName", nullable=false, length=50)
    @Field
    public String getTextFontName(){
        return this.strTextFontName;
    }
    
    public void setTextFontName(String strTextFontName){
        this.strTextFontName = strTextFontName;
    }
    
    @JsonProperty(value = "nTextFontSize")
    @Column(name="nTextFontSize", nullable=false)
    @Field
    public short getTextFontSize(){
        return this.nTextFontSize;
    }
    
    public void setTextFontSize(short nTextFontSize){
        this.nTextFontSize = nTextFontSize;
    }
    
    @JsonProperty(value = "crTextFGColor")
    @Column(name="crTextFGColor", nullable=false)
    @Field
    public int getTextFGColor(){
        return this.crTextFGColor;
    }
    
    public void setTextFGColor(int crTextFGColor){
        this.crTextFGColor = crTextFGColor;
    }
    
    @JsonProperty(value = "bFontBold")
    @Column(name="bFontBold", nullable=false)
    @Field
    public boolean isFontBold(){
        return this.bFontBold;
    }
    
    public void setFontBold(boolean bFontBold){
        this.bFontBold = bFontBold;
    }
    
    @JsonProperty(value = "bFontItalic")
    @Column(name="bFontItalic", nullable=false)
    @Field
    public boolean isFontItalic(){
        return this.bFontItalic;
    }
    
    public void setFontItalic(boolean bFontItalic){
        this.bFontItalic = bFontItalic;
    }
    
    @JsonProperty(value = "bFontUnderline")
    @Column(name="bFontUnderline", nullable=false)
    @Field
    public boolean isFontUnderline(){
        return this.bFontUnderline;
    }
    
    public void setFontUnderline(boolean bFontUnderline){
        this.bFontUnderline = bFontUnderline;
    }
    
    @JsonProperty(value = "strTitleFontName")
    @Column(name="strTitleFontName", nullable=false, length=50)
    @Field
    public String getTitleFontName(){
        return this.strTitleFontName;
    }
    
    public void setTitleFontName(String strTitleFontName){
        this.strTitleFontName = strTitleFontName;
    }
    
    @JsonProperty(value = "nTitleFontSize")
    @Column(name="nTitleFontSize", nullable=false)
    @Field
    public short getTitleFontSize(){
        return this.nTitleFontSize;
    }
    
    public void setTitleFontSize(short nTitleFontSize){
        this.nTitleFontSize = nTitleFontSize;
    }
    
    @JsonProperty(value = "crTitleFGColor")
    @Column(name="crTitleFGColor", nullable=false)
    @Field
    public int getTitleFGColor(){
        return this.crTitleFGColor;
    }
    
    public void setTitleFGColor(int crTitleFGColor){
        this.crTitleFGColor = crTitleFGColor;
    }
    
    @JsonProperty(value = "bTitleBold")
    @Column(name="bTitleBold", nullable=false)
    @Field
    public boolean isTitleBold(){
        return this.bTitleBold;
    }
    
    public void setTitleBold(boolean bTitleBold){
        this.bTitleBold = bTitleBold;
    }
    
    @JsonProperty(value = "bTitleItalic")
    @Column(name="bTitleItalic", nullable=false)
    @Field
    public boolean isTitleItalic(){
        return this.bTitleItalic;
    }
    
    public void setTitleItalic(boolean bTitleItalic){
        this.bTitleItalic = bTitleItalic;
    }
    
    @JsonProperty(value = "bTitleUnderline")
    @Column(name="bTitleUnderline", nullable=false)
    @Field
    public boolean isTitleUnderline(){
        return this.bTitleUnderline;
    }
    
    public void setTitleUnderline(boolean bTitleUnderline){
        this.bTitleUnderline = bTitleUnderline;
    }
    
    @JsonProperty(value = "bShowDate")
    @Column(name="bShowDate", nullable=false)
    @Field
    public boolean isShowDate(){
        return this.bShowDate;
    }
    
    public void setShowDate(boolean bShowDate){
        this.bShowDate = bShowDate;
    }
    
    @JsonProperty(value = "bShowTime")
    @Column(name="bShowTime", nullable=false)
    @Field
    public boolean isShowTime(){
        return this.bShowTime;
    }
    
    public void setShowTime(boolean bShowTime){
        this.bShowTime = bShowTime;
    }
    
    @JsonProperty(value = "bShowWeek")
    @Column(name="bShowWeek", nullable=false)
    @Field
    public boolean isShowWeek(){
        return this.bShowWeek;
    }
    
    public void setShowWeek(boolean bShowWeek){
        this.bShowWeek = bShowWeek;
    }
    
    @JsonProperty(value = "bShowDateHand")
    @Column(name="bShowDateHand", nullable=false)
    @Field
    public boolean isShowDateHand(){
        return this.bShowDateHand;
    }
    
    public void setShowDateHand(boolean bShowDateHand){
        this.bShowDateHand = bShowDateHand;
    }
    
    @JsonProperty(value = "bShowSecondHand")
    @Column(name="bShowSecondHand", nullable=false)
    @Field
    public boolean isShowSecondHand(){
        return this.bShowSecondHand;
    }
    
    public void setShowSecondHand(boolean bShowSecondHand){
        this.bShowSecondHand = bShowSecondHand;
    }
    
    @JsonProperty(value = "crTextBKColor")
    @Column(name="crTextBKColor", nullable=false)
    @Field
    public int getTextBKColor(){
        return this.crTextBKColor;
    }
    
    public void setTextBKColor(int crTextBKColor){
        this.crTextBKColor = crTextBKColor;
    }
    
    @JsonProperty(value = "nOffsetMins")
    @Column(name="nOffsetMins", nullable=false)
    @Field
    public short getOffsetMins(){
        return this.nOffsetMins;
    }
    
    public void setOffsetMins(short nOffsetMins){
        this.nOffsetMins = nOffsetMins;
    }
    
    @JsonProperty(value = "crFaceGStart")
    @Column(name="crFaceGStart")
    @Field
    public Integer getFaceGStart(){
        return this.crFaceGStart;
    }
    
    public void setFaceGStart(Integer crFaceGStart){
        this.crFaceGStart = crFaceGStart;
    }
    
    @JsonProperty(value = "crFaceGStop")
    @Column(name="crFaceGStop")
    @Field
    public Integer getFaceGStop(){
        return this.crFaceGStop;
    }
    
    public void setFaceGStop(Integer crFaceGStop){
        this.crFaceGStop = crFaceGStop;
    }
    
    @JsonProperty(value = "crSecondHand")
    @Column(name="crSecondHand")
    @Field
    public Integer getSecondHand(){
        return this.crSecondHand;
    }
    
    public void setSecondHand(Integer crSecondHand){
        this.crSecondHand = crSecondHand;
    }
    
    @JsonProperty(value = "crMinuteHand")
    @Column(name="crMinuteHand")
    @Field
    public Integer getMinuteHand(){
        return this.crMinuteHand;
    }
    
    public void setMinuteHand(Integer crMinuteHand){
        this.crMinuteHand = crMinuteHand;
    }
    
    @JsonProperty(value = "crHourHand")
    @Column(name="crHourHand")
    @Field
    public Integer getHourHand(){
        return this.crHourHand;
    }
    
    public void setHourHand(Integer crHourHand){
        this.crHourHand = crHourHand;
    }
    
    @JsonProperty(value = "crFaceLine")
    @Column(name="crFaceLine")
    @Field
    public Integer getFaceLine(){
        return this.crFaceLine;
    }
    
    public void setFaceLine(Integer crFaceLine){
        this.crFaceLine = crFaceLine;
    }
    
    /*@JsonProperty(value = "pClocks")
    @Lob
    @Basic(fetch = FetchType.LAZY )
    @Column(name="pClocks", columnDefinition = "BLOB")
    @Type(type="org.hibernate.type.WrappedMaterializedBlobType")
    public Byte[] getPClocks(){
        return this.pClocks;
    }*/
    
    @Basic(fetch = FetchType.LAZY )
    @Column(name="pClocks", length = 10485760)
	@JsonIgnore
	public byte[] getPClocks() {
		return pClocks;
	}
    
    public void setPClocks(byte[] pClocks){
        this.pClocks = pClocks;
    }
        
    /**
    * {@inheritDoc}
    */
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Clock pojo = (Clock)o;
        return (new EqualsBuilder()
             .append(contentName, pojo.contentName)
             .append(description, pojo.description)
             .append(nBg, pojo.nBg)
             .append(strTimeZone, pojo.strTimeZone)
             .append(strFile, pojo.strFile)
             .append(strSkinType, pojo.strSkinType)
             .append(strTimeZoneTitle, pojo.strTimeZoneTitle)
             .append(strDateSep, pojo.strDateSep)
             .append(strTimeSep, pojo.strTimeSep)
             .append(nClockType, pojo.nClockType)
             .append(nDirection, pojo.nDirection)
             .append(nTimeType, pojo.nTimeType)
             .append(nTop, pojo.nTop)
             .append(nLeft, pojo.nLeft)
             .append(nRows, pojo.nRows)
             .append(nCols, pojo.nCols)
             .append(nDateBox, pojo.nDateBox)
             .append(nWeek, pojo.nWeek)
             .append(nDate, pojo.nDate)
             .append(nTime, pojo.nTime)
             .append(nSkinType, pojo.nSkinType)
             .append(strTextFontName, pojo.strTextFontName)
             .append(nTextFontSize, pojo.nTextFontSize)
             .append(crTextFGColor, pojo.crTextFGColor)
             .append(bFontBold, pojo.bFontBold)
             .append(bFontItalic, pojo.bFontItalic)
             .append(bFontUnderline, pojo.bFontUnderline)
             .append(strTitleFontName, pojo.strTitleFontName)
             .append(nTitleFontSize, pojo.nTitleFontSize)
             .append(crTitleFGColor, pojo.crTitleFGColor)
             .append(bTitleBold, pojo.bTitleBold)
             .append(bTitleItalic, pojo.bTitleItalic)
             .append(bTitleUnderline, pojo.bTitleUnderline)
             .append(bShowDate, pojo.bShowDate)
             .append(bShowTime, pojo.bShowTime)
             .append(bShowWeek, pojo.bShowWeek)
             .append(bShowDateHand, pojo.bShowDateHand)
             .append(bShowSecondHand, pojo.bShowSecondHand)
             .append(crTextBKColor, pojo.crTextBKColor)
             .append(nOffsetMins, pojo.nOffsetMins)
             .append(crFaceGStart, pojo.crFaceGStart)
             .append(crFaceGStop, pojo.crFaceGStop)
             .append(crSecondHand, pojo.crSecondHand)
             .append(crMinuteHand, pojo.crMinuteHand)
             .append(crHourHand, pojo.crHourHand)
             .append(crFaceLine, pojo.crFaceLine)
             .append(pClocks, pojo.pClocks)
             ).isEquals();
    }


    /**
    * {@inheritDoc}
    */
     public int hashCode() {
        return   new  HashCodeBuilder( 17 ,  37 )
             .append(contentName)
             .append(description)
             .append(nBg)
             .append(strTimeZone)
             .append(strFile)
             .append(strSkinType)
             .append(strTimeZoneTitle)
             .append(strDateSep)
             .append(strTimeSep)
             .append(nClockType)
             .append(nDirection)
             .append(nTimeType)
             .append(nTop)
             .append(nLeft)
             .append(nRows)
             .append(nCols)
             .append(nDateBox)
             .append(nWeek)
             .append(nDate)
             .append(nTime)
             .append(nSkinType)
             .append(strTextFontName)
             .append(nTextFontSize)
             .append(crTextFGColor)
             .append(bFontBold)
             .append(bFontItalic)
             .append(bFontUnderline)
             .append(strTitleFontName)
             .append(nTitleFontSize)
             .append(crTitleFGColor)
             .append(bTitleBold)
             .append(bTitleItalic)
             .append(bTitleUnderline)
             .append(bShowDate)
             .append(bShowTime)
             .append(bShowWeek)
             .append(bShowDateHand)
             .append(bShowSecondHand)
             .append(crTextBKColor)
             .append(nOffsetMins)
             .append(crFaceGStart)
             .append(crFaceGStop)
             .append(crSecondHand)
             .append(crMinuteHand)
             .append(crHourHand)
             .append(crFaceLine)
             .append(pClocks)
             .toHashCode();
    }


    /**
    * {@inheritDoc}
    */
     public String toString() {
        StringBuffer sb = new StringBuffer(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Id").append("='").append(getId()).append("', ");
        sb.append("contentName").append("='").append(getContentName()).append("', ");
        sb.append("description").append("='").append(getDescription()).append("', ");
        sb.append("nBg").append("='").append(getBg()).append("', ");
        sb.append("strTimeZone").append("='").append(getTimeZone()).append("', ");
        sb.append("strFile").append("='").append(getFile()).append("', ");
        sb.append("strSkinType").append("='").append(getSkinType()).append("', ");
        sb.append("strTimeZoneTitle").append("='").append(getTimeZoneTitle()).append("', ");
        sb.append("strDateSep").append("='").append(getDateSep()).append("', ");
        sb.append("strTimeSep").append("='").append(getTimeSep()).append("', ");
        sb.append("nClockType").append("='").append(getClockType()).append("', ");
        sb.append("nDirection").append("='").append(getDirection()).append("', ");
        sb.append("nTimeType").append("='").append(getTimeType()).append("', ");
        sb.append("nTop").append("='").append(getTop()).append("', ");
        sb.append("nLeft").append("='").append(getLeft()).append("', ");
        sb.append("nRows").append("='").append(getRows()).append("', ");
        sb.append("nCols").append("='").append(getCols()).append("', ");
        sb.append("nDateBox").append("='").append(getDateBox()).append("', ");
        sb.append("nWeek").append("='").append(getWeek()).append("', ");
        sb.append("nDate").append("='").append(getDate()).append("', ");
        sb.append("nTime").append("='").append(getTime()).append("', ");
        sb.append("nSkinType").append("='").append(getSkinTypeShort()).append("', ");
        sb.append("strTextFontName").append("='").append(getTextFontName()).append("', ");
        sb.append("nTextFontSize").append("='").append(getTextFontSize()).append("', ");
        sb.append("crTextFGColor").append("='").append(getTextFGColor()).append("', ");
        sb.append("bFontBold").append("='").append(isFontBold()).append("', ");
        sb.append("bFontItalic").append("='").append(isFontItalic()).append("', ");
        sb.append("bFontUnderline").append("='").append(isFontUnderline()).append("', ");
        sb.append("strTitleFontName").append("='").append(getTitleFontName()).append("', ");
        sb.append("nTitleFontSize").append("='").append(getTitleFontSize()).append("', ");
        sb.append("crTitleFGColor").append("='").append(getTitleFGColor()).append("', ");
        sb.append("bTitleBold").append("='").append(isTitleBold()).append("', ");
        sb.append("bTitleItalic").append("='").append(isTitleItalic()).append("', ");
        sb.append("bTitleUnderline").append("='").append(isTitleUnderline()).append("', ");
        sb.append("bShowDate").append("='").append(isShowDate()).append("', ");
        sb.append("bShowTime").append("='").append(isShowTime()).append("', ");
        sb.append("bShowWeek").append("='").append(isShowWeek()).append("', ");
        sb.append("bShowDateHand").append("='").append(isShowDateHand()).append("', ");
        sb.append("bShowSecondHand").append("='").append(isShowSecondHand()).append("', ");
        sb.append("crTextBKColor").append("='").append(getTextBKColor()).append("', ");
        sb.append("nOffsetMins").append("='").append(getOffsetMins()).append("', ");
        sb.append("crFaceGStart").append("='").append(getFaceGStart()).append("', ");
        sb.append("crFaceGStop").append("='").append(getFaceGStop()).append("', ");
        sb.append("crSecondHand").append("='").append(getSecondHand()).append("', ");
        sb.append("crMinuteHand").append("='").append(getMinuteHand()).append("', ");
        sb.append("crHourHand").append("='").append(getHourHand()).append("', ");
        sb.append("crFaceLine").append("='").append(getFaceLine()).append("', ");
        sb.append("pClocks").append("='").append(getPClocks()).append("', ");
        sb.append("]");
        
        return sb.toString();
    }

}
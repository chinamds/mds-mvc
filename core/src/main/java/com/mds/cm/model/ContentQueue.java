// Created using LayerGen 3.5

package com.mds.cm.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.mds.common.model.JsonDateSerializer;
import com.mds.core.ContentObjectRotation;
import com.mds.core.ContentQueueItemConversionType;
import com.mds.core.ContentQueueItemStatus;
import com.mds.common.model.IdEntity;

import org.hibernate.annotations.Type;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.bridge.builtin.IntegerBridge;
import  org.apache.commons.lang.builder.HashCodeBuilder;
import  org.apache.commons.lang.builder.EqualsBuilder;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.CascadeType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import javax.xml.bind.annotation.XmlRootElement;

import java.io.Serializable;
import java.math.BigDecimal;

@Entity
@Table(name="cm_contentqueue" )
@Indexed
@XmlRootElement
public class ContentQueue extends IdEntity implements Serializable {
    /**
	 * 
	 */
	private static final long serialVersionUID = -3836266710780612581L;
    private ContentQueueItemStatus status;
    private String statusDetail;
    private ContentQueueItemConversionType conversionType;
    private ContentObjectRotation rotationAmount;
    private Date dateAdded;
    private Date dateConversionStarted;
    private Date dateConversionCompleted;
    
    private ContentObject contentObject;
   
    @ManyToOne
    @JoinColumn(name="contentobject_id", nullable=false)
    public ContentObject getContentObject() {
		return contentObject;
	}

	public void setContentObject(ContentObject contentObject) {
		this.contentObject = contentObject;
	}
    
    @JsonProperty(value = "Status")
    @Column(name="status", nullable=false, length=20)
    @Enumerated(EnumType.STRING)
    @Field
    public ContentQueueItemStatus getStatus(){
        return this.status;
    }
    
    public void setStatus(ContentQueueItemStatus status){
        this.status = status;
    }
    
    @JsonProperty(value = "StatusDetail")
    @Column(name="status_detail", nullable=false)
    @Type(type="text")
    @Field
    public String getStatusDetail(){
        return this.statusDetail;
    }
    
    public void setStatusDetail(String statusDetail){
        this.statusDetail = statusDetail;
    }
    
    @JsonProperty(value = "ConversionType")
    @Column(name="conversion_type", nullable=false, length=20)
    @Enumerated(EnumType.STRING)
    @Field
    public ContentQueueItemConversionType getConversionType(){
        return this.conversionType;
    }
    
    public void setConversionType(ContentQueueItemConversionType conversionType){
        this.conversionType = conversionType;
    }
    
    @JsonProperty(value = "RotationAmount")
    @Column(name="rotation_amount", nullable=false)
    @Enumerated(EnumType.STRING)
    @Field
    public ContentObjectRotation getRotationAmount(){
        return this.rotationAmount;
    }
    
    public void setRotationAmount(ContentObjectRotation rotationAmount){
        this.rotationAmount = rotationAmount;
    }
    
    @JsonProperty(value = "DateAdded")
    @JsonSerialize(using = JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_added", nullable=false, length=19)
    @Field
    public Date getDateAdded(){
        return this.dateAdded;
    }
    
    public void setDateAdded(Date dateAdded){
        this.dateAdded = dateAdded;
    }
    
    @JsonProperty(value = "DateConversionStarted")
    @JsonSerialize(using = JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_conversion_started", length=19)
    @Field
    public Date getDateConversionStarted(){
        return this.dateConversionStarted;
    }
    
    public void setDateConversionStarted(Date dateConversionStarted){
        this.dateConversionStarted = dateConversionStarted;
    }
    
    @JsonProperty(value = "DateConversionCompleted")
    @JsonSerialize(using = JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_conversion_completed", length=19)
    @Field
    public Date getDateConversionCompleted(){
        return this.dateConversionCompleted;
    }
    
    public void setDateConversionCompleted(Date dateConversionCompleted){
        this.dateConversionCompleted = dateConversionCompleted;
    }


    /**
    * {@inheritDoc}
    */
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        ContentQueue pojo = (ContentQueue)o;
        return (new EqualsBuilder()
             .append(status, pojo.status)
             .append(statusDetail, pojo.statusDetail)
             .append(conversionType, pojo.conversionType)
             .append(rotationAmount, pojo.rotationAmount)
             .append(dateAdded, pojo.dateAdded)
             .append(dateConversionStarted, pojo.dateConversionStarted)
             .append(dateConversionCompleted, pojo.dateConversionCompleted)
             ).isEquals();
    }


    /**
    * {@inheritDoc}
    */
     public int hashCode() {
        return   new  HashCodeBuilder( 17 ,  37 )
             .append(status)
             .append(statusDetail)
             .append(conversionType)
             .append(rotationAmount)
             .append(dateAdded)
             .append(dateConversionStarted)
             .append(dateConversionCompleted)
             .toHashCode();
    }


    /**
    * {@inheritDoc}
    */
     public String toString() {
        StringBuffer sb = new StringBuffer(getClass().getSimpleName());
        sb.append(" [");
        sb.append("contentQueueId").append("='").append(getId()).append("', ");
        sb.append("status").append("='").append(getStatus()).append("', ");
        sb.append("statusDetail").append("='").append(getStatusDetail()).append("', ");
        sb.append("conversionType").append("='").append(getConversionType()).append("', ");
        sb.append("rotationAmount").append("='").append(getRotationAmount()).append("', ");
        sb.append("dateAdded").append("='").append(getDateAdded()).append("', ");
        sb.append("dateConversionStarted").append("='").append(getDateConversionStarted()).append("', ");
        sb.append("dateConversionCompleted").append("='").append(getDateConversionCompleted()).append("', ");
        sb.append("]");
        
        return sb.toString();
    }

}
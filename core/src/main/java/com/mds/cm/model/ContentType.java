// Created using LayerGen 3.5

package com.mds.cm.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.collect.Lists;
import com.mds.common.model.BaseObject;
import com.mds.common.model.IdEntity;
import com.mds.sys.model.Role;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;
import org.hibernate.annotations.Type;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.bridge.builtin.IntegerBridge;
import  org.apache.commons.lang.builder.HashCodeBuilder;
import  org.apache.commons.lang.builder.EqualsBuilder;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.CascadeType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import javax.xml.bind.annotation.XmlRootElement;

import java.io.Serializable;
import java.math.BigDecimal;

@Entity
@Table(name="cm_contenttype" )
@Indexed
@XmlRootElement
public class ContentType extends IdEntity implements Serializable {
    /**
	 * 
	 */
	private static final long serialVersionUID = -5431365967024465650L;
	/**
	 * 
	 */
	private int type;
    private String code;
    private String contentName;
    private String fileFilter;
    private int seq;
    private long flag;
    private long flags;
    private String settingsKey;
    
    public ContentType(){
		super();
	}
    
    public ContentType(final int type, final String code, final String contentName, final String fileFilter
    		, int seq, long flag, long flags, final String settingsKey){
		super();
		this.type = type;
		this.code = code;
		this.contentName = contentName;
		this.fileFilter = fileFilter;
		this.seq = seq;
		this.flag = flag;
		this.flags = flags;
		this.settingsKey = settingsKey;
	}
   
    @JsonProperty(value = "Type")
    @Column(name="type", nullable=false, unique=true)
    public int getType() {
		return type;
	}


	public void setType(int type) {
		this.type = type;
	}


	@JsonProperty(value = "Code")
    @Column(name="code", nullable=false, length=50, unique=true)
    @Field
	public String getCode() {
		return code;
	}


	public void setCode(String code) {
		this.code = code;
	}


	@JsonProperty(value = "ContentName")
    @Column(name="content_name", nullable=true, length=100)
    @Field
	public String getContentName() {
		return contentName;
	}


	public void setContentName(String contentName) {
		this.contentName = contentName;
	}


	@JsonProperty(value = "FileFilter")
    @Column(name="file_filter", nullable=true, length=255)
    @Field
	public String getFileFilter() {
		return fileFilter;
	}


	public void setFileFilter(String fileFilter) {
		this.fileFilter = fileFilter;
	}


	@JsonProperty(value = "Seq")
    @Column(name="seq", nullable=false)
	public int getSeq() {
		return seq;
	}


	public void setSeq(int seq) {
		this.seq = seq;
	}


	@JsonProperty(value = "Flag")
    @Column(name="flag", nullable=false)
	public long getFlag() {
		return flag;
	}


	public void setFlag(long flag) {
		this.flag = flag;
	}


	@JsonProperty(value = "Flags")
    @Column(name="flags", nullable=false)
	public long getFlags() {
		return flags;
	}


	public void setFlags(long flags) {
		this.flags = flags;
	}


	@JsonProperty(value = "SettingsKey")
    @Column(name="settings_key", nullable=true, length=50)
    @Field
	public String getSettingsKey() {
		return settingsKey;
	}


	public void setSettingsKey(String settingsKey) {
		this.settingsKey = settingsKey;
	}
	
	 @Transient
	 public String getLanguageKey() {
		 return "contentType." + this.code.replace(' ', '_');
	 }

	/**
    * {@inheritDoc}
    */
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        ContentType pojo = (ContentType)o;
        return (new EqualsBuilder()
             ).isEquals();
    }


    /**
    * {@inheritDoc}
    */
     public int hashCode() {
        return   new  HashCodeBuilder( 17 ,  37 )
             .toHashCode();
    }


    /**
    * {@inheritDoc}
    */
     public String toString() {
        StringBuffer sb = new StringBuffer(getClass().getSimpleName());
        sb.append(" [");
        sb.append("contentName").append("='").append(getContentName()).append("', ");
        sb.append("]");
        
        return sb.toString();
    }

	@Override
	public void copyFrom(Object source) {
		 this.type = ((ContentType)source).getType();
		 this.code = ((ContentType)source).getCode();
		 this.contentName = ((ContentType)source).getContentName();
		 this.fileFilter = ((ContentType)source).getFileFilter();
		 this.seq = ((ContentType)source).getSeq();
		 this.flag = ((ContentType)source).getFlag();
		 this.flags = ((ContentType)source).getFlags();
		 this.settingsKey = ((ContentType)source).getSettingsKey();
	}
}
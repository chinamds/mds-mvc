// Created using LayerGen 3.5

package com.mds.hrm.model;

import com.google.common.collect.Lists;
import com.mds.common.model.DataEntity;
import com.mds.sys.model.Organization;
import com.mds.sys.model.User;
import com.mds.wf.model.Activity;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;
import org.hibernate.annotations.Type;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.bridge.builtin.IntegerBridge;
import  org.apache.commons.lang.builder.HashCodeBuilder;
import  org.apache.commons.lang.builder.EqualsBuilder;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.CascadeType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import javax.xml.bind.annotation.XmlRootElement;

import java.io.Serializable;
import java.math.BigDecimal;

@Entity
@Table(name="hrm_staff" )
@Indexed
@XmlRootElement
public class Staff extends DataEntity implements Serializable {
    /**
	 * 
	 */
	private static final long serialVersionUID = 9160868235779285035L;
	private String staffNo;
    private String surname;
    private String givenName;
    private String nickName;
    private String chineseName;
    private String gender;
    private Date birthday;
    private String organizationId;
    private String status;
    private Date joinDate;
    private Date probationDate;
    private Date lastEmploymentDate;
    private Date lastWorkingDate;
    private String title;
    private String staffType;
    private String contractRef;
    private String residentialAddress;
    private String postalAddress;
    private String referee;
    private String rChineseName;
    private String relationship;
    private String refereeTel;
    private String socialInsuranceCard;
    private String isSocialInsuranceCard;
    private String nativePlace;
    private String telHome;
    private String telMobile;
    private String email;
    private String rank;
    private String remarks;
    private String marital;
    private String nationality;
    private String staffGroup;
    private String referee2;
    private String rChineseName2;
    private String relationship2;
    private String refereeTel2;
    private String spouseName;
    private String spouseIDNo;
    private String placeOfBirth;
    
    private Organization organization;	// Organization
    private List<User> users = Lists.newArrayList();   // users
    //private List<Activity> activities = Lists.newArrayList();	// activities
    private List<StaffDepartment> staffDepartments = Lists.newArrayList();	// departments
    private List<StaffPosition> staffPositions = Lists.newArrayList();	// positions   
    private List<StaffIdentity> staffIdentities = Lists.newArrayList();	// Staff Identities
    
 
    @ManyToOne(cascade=CascadeType.ALL, fetch = FetchType.LAZY)
    @JoinColumn(name="organization_id", nullable=false)
    public Organization getOrganization() {
		return organization;
	}

	public void setOrganization(Organization organization) {
		this.organization = organization;
	}
	
	@OneToMany(cascade=CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true, mappedBy="staff")
	@OrderBy(value="id") 
	@Fetch(FetchMode.SUBSELECT)
	@NotFound(action = NotFoundAction.IGNORE)
	
	public List<User> getUsers() {
		return users;
	}

	public void setUsers(List<User> users) {
		this.users = users;
	}

	/*@ManyToMany(mappedBy = "staffs", fetch=FetchType.LAZY)
	@OrderBy("id") 
	@Fetch(FetchMode.SUBSELECT)
	@NotFound(action = NotFoundAction.IGNORE)
	
	public List<Activity> getActivities() {
		return activities;
	}

	public void setActivities(List<Activity> activities) {
		this.activities = activities;
	}*/
	
	@OneToMany(cascade=CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true, mappedBy="staff")
	@OrderBy(value="id") 
	@Fetch(FetchMode.SUBSELECT)
	@NotFound(action = NotFoundAction.IGNORE)
	
	public List<StaffDepartment> getStaffDepartments() {
		return staffDepartments;
	}

	public void setStaffDepartments(List<StaffDepartment> staffDepartments) {
		this.staffDepartments = staffDepartments;
	}
	
	@OneToMany(cascade=CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true, mappedBy="staff")
	@OrderBy(value="id") 
	@Fetch(FetchMode.SUBSELECT)
	@NotFound(action = NotFoundAction.IGNORE)
	
	public List<StaffPosition> getStaffPositions() {
		return staffPositions;
	}

	public void setStaffPositions(List<StaffPosition> staffPositions) {
		this.staffPositions = staffPositions;
	}

	/**
	 * @return the staffIdentities
	 */
	@OneToMany(cascade=CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true, mappedBy="staff")
	@OrderBy(value="id") 
	@Fetch(FetchMode.SUBSELECT)
	@NotFound(action = NotFoundAction.IGNORE)
	
	public List<StaffIdentity> getStaffIdentities() {
		return staffIdentities;
	}

	/**
	 * @param staffIdentities the staffIdentities to set
	 */
	public void setStaffIdentities(List<StaffIdentity> staffIdentities) {
		this.staffIdentities = staffIdentities;
	}

	@Column(name="StaffNo", nullable=false, length=100)
    @Field
    public String getStaffNo(){
        return this.staffNo;
    }

	public void setStaffNo(String staffNo){
        this.staffNo = staffNo;
    }
    
    @Column(name="Surname", nullable=false, length=100)
    @Field
    public String getSurname(){
        return this.surname;
    }
    
    public void setSurname(String surname){
        this.surname = surname;
    }
    
    @Column(name="GivenName", nullable=false, length=100)
    @Field
    public String getGivenName(){
        return this.givenName;
    }
    
    public void setGivenName(String givenName){
        this.givenName = givenName;
    }
    
    @Column(name="NickName", length=100)
    @Field
    public String getNickName(){
        return this.nickName;
    }
    
    public void setNickName(String nickName){
        this.nickName = nickName;
    }
    
    @Column(name="ChineseName", nullable=false, length=50)
    @Field
    public String getChineseName(){
        return this.chineseName;
    }
    
    public void setChineseName(String chineseName){
        this.chineseName = chineseName;
    }
    
	@Column(name="Gender", nullable=false, length=1)
    @Field
    public String getGender(){
        return this.gender;
    }
    
    public void setGender(String gender){
        this.gender = gender;
    }
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Birthday", length=19)
    @Field
    public Date getBirthday(){
        return this.birthday;
    }
    
    public void setBirthday(Date birthday){
        this.birthday = birthday;
    }
        
    @Transient
    public String getOrganizationId(){
        return this.organizationId;
    }
    
    public void setOrganizationId(String organizationId){
        this.organizationId = organizationId;
    }
    
    @Column(name="Status", nullable=false, length=1)
    @Field
    public String getStatus(){
        return this.status;
    }
    
    public void setStatus(String status){
        this.status = status;
    }
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="JoinDate", nullable=false, length=19)
    @Field
    public Date getJoinDate(){
        return this.joinDate;
    }
    
    public void setJoinDate(Date joinDate){
        this.joinDate = joinDate;
    }
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="ProbationDate", length=19)
    @Field
    public Date getProbationDate(){
        return this.probationDate;
    }
    
    public void setProbationDate(Date probationDate){
        this.probationDate = probationDate;
    }
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LastEmploymentDate", length=19)
    @Field
    public Date getLastEmploymentDate(){
        return this.lastEmploymentDate;
    }
    
    public void setLastEmploymentDate(Date lastEmploymentDate){
        this.lastEmploymentDate = lastEmploymentDate;
    }
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LastWorkingDate", length=19)
    @Field
    public Date getLastWorkingDate(){
        return this.lastWorkingDate;
    }
    
    public void setLastWorkingDate(Date lastWorkingDate){
        this.lastWorkingDate = lastWorkingDate;
    }
    
    
    @Column(name="Title", length=100)
    @Field
    public String getTitle(){
        return this.title;
    }
    
    public void setTitle(String title){
        this.title = title;
    }
    
    @Column(name="StaffType", length=1)
    @Field
    public String getStaffType(){
        return this.staffType;
    }
    
    public void setStaffType(String staffType){
        this.staffType = staffType;
    }
    
    @Column(name="ContractRef")
    @Type(type="text")
    @Field
    public String getContractRef(){
        return this.contractRef;
    }
    
    public void setContractRef(String contractRef){
        this.contractRef = contractRef;
    }
    
    @Column(name="ResidentialAddress")
    @Type(type="text")
    @Field
    public String getResidentialAddress(){
        return this.residentialAddress;
    }
    
    public void setResidentialAddress(String residentialAddress){
        this.residentialAddress = residentialAddress;
    }
    
    @Column(name="PostalAddress")
    @Type(type="text")
    @Field
    public String getPostalAddress(){
        return this.postalAddress;
    }
    
    public void setPostalAddress(String postalAddress){
        this.postalAddress = postalAddress;
    }
    
    @Column(name="Referee")
    @Type(type="text")
    @Field
    public String getReferee(){
        return this.referee;
    }
    
    public void setReferee(String referee){
        this.referee = referee;
    }
    
    @Column(name="RChineseName")
    @Type(type="text")
    @Field
    public String getRChineseName(){
        return this.rChineseName;
    }
    
    public void setRChineseName(String rChineseName){
        this.rChineseName = rChineseName;
    }
    
    @Column(name="Relationship")
    @Type(type="text")
    @Field
    public String getRelationship(){
        return this.relationship;
    }
    
    public void setRelationship(String relationship){
        this.relationship = relationship;
    }
    
    @Column(name="RefereeTel")
    @Type(type="text")
    @Field
    public String getRefereeTel(){
        return this.refereeTel;
    }
    
    public void setRefereeTel(String refereeTel){
        this.refereeTel = refereeTel;
    }
    
    @Column(name="SocialInsuranceCard")
    @Type(type="text")
    @Field
    public String getSocialInsuranceCard(){
        return this.socialInsuranceCard;
    }
    
    public void setSocialInsuranceCard(String socialInsuranceCard){
        this.socialInsuranceCard = socialInsuranceCard;
    }
    
    @Column(name="IsSocialInsuranceCard")
    @Type(type="text")
    @Field
    public String getIsSocialInsuranceCard(){
        return this.isSocialInsuranceCard;
    }
    
    public void setIsSocialInsuranceCard(String isSocialInsuranceCard){
        this.isSocialInsuranceCard = isSocialInsuranceCard;
    }
    
    @Column(name="NativePlace")
    @Type(type="text")
    @Field
    public String getNativePlace(){
        return this.nativePlace;
    }
    
    public void setNativePlace(String nativePlace){
        this.nativePlace = nativePlace;
    }
    
    @Column(name="TelHome")
    @Type(type="text")
    @Field
    public String getTelHome(){
        return this.telHome;
    }
    
    public void setTelHome(String telHome){
        this.telHome = telHome;
    }
    
    @Column(name="TelMobile")
    @Type(type="text")
    @Field
    public String getTelMobile(){
        return this.telMobile;
    }
    
    public void setTelMobile(String telMobile){
        this.telMobile = telMobile;
    }
    
    @Column(name="Email")
    @Type(type="text")
    @Field
    public String getEmail(){
        return this.email;
    }
    
    public void setEmail(String email){
        this.email = email;
    }
    
    @Column(name="Rank")
    @Type(type="text")
    @Field
    public String getRank(){
        return this.rank;
    }
    
    public void setRank(String rank){
        this.rank = rank;
    }
    
    @Column(name="Remarks")
    @Type(type="text")
    @Field
    public String getRemarks(){
        return this.remarks;
    }
    
    public void setRemarks(String remarks){
        this.remarks = remarks;
    }
    
    @Column(name="Marital", nullable=false)
    @Type(type="text")
    @Field
    public String getMarital(){
        return this.marital;
    }
    
    public void setMarital(String marital){
        this.marital = marital;
    }
    
    @Column(name="Nationality")
    @Type(type="text")
    @Field
    public String getNationality(){
        return this.nationality;
    }
    
    public void setNationality(String nationality){
        this.nationality = nationality;
    }
            
    @Column(name="StaffGroup")
    @Type(type="text")
    @Field
    public String getStaffGroup(){
        return this.staffGroup;
    }
    
    public void setStaffGroup(String staffGroup){
        this.staffGroup = staffGroup;
    }
    
    @Column(name="Referee2")
    @Type(type="text")
    @Field
    public String getReferee2(){
        return this.referee2;
    }
    
    public void setReferee2(String referee2){
        this.referee2 = referee2;
    }
    
    @Column(name="RChineseName2")
    @Type(type="text")
    @Field
    public String getRChineseName2(){
        return this.rChineseName2;
    }
    
    public void setRChineseName2(String rChineseName2){
        this.rChineseName2 = rChineseName2;
    }
    
    @Column(name="Relationship2")
    @Type(type="text")
    @Field
    public String getRelationship2(){
        return this.relationship2;
    }
    
    public void setRelationship2(String relationship2){
        this.relationship2 = relationship2;
    }
    
    @Column(name="RefereeTel2")
    @Type(type="text")
    @Field
    public String getRefereeTel2(){
        return this.refereeTel2;
    }
    
    public void setRefereeTel2(String refereeTel2){
        this.refereeTel2 = refereeTel2;
    }
    
    @Column(name="SpouseName", length=100)
    @Field
    public String getSpouseName(){
        return this.spouseName;
    }
    
    public void setSpouseName(String spouseName){
        this.spouseName = spouseName;
    }
    
    @Column(name="SpouseIDNo", length=50)
    @Field
    public String getSpouseIDNo(){
        return this.spouseIDNo;
    }
    
    public void setSpouseIDNo(String spouseIDNo){
        this.spouseIDNo = spouseIDNo;
    }
    
    @Column(name="PlaceOfBirth")
    @Type(type="text")
    @Field
    public String getPlaceOfBirth(){
        return this.placeOfBirth;
    }
    
    public void setPlaceOfBirth(String placeOfBirth){
        this.placeOfBirth = placeOfBirth;
    }

    /**
    * {@inheritDoc}
    */
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Staff pojo = (Staff)o;
        return (new EqualsBuilder()
             .append(surname, pojo.surname)
             .append(givenName, pojo.givenName)
             .append(nickName, pojo.nickName)
             .append(chineseName, pojo.chineseName)
             .append(gender, pojo.gender)
             .append(birthday, pojo.birthday)
             .append(status, pojo.status)
             .append(joinDate, pojo.joinDate)
             .append(probationDate, pojo.probationDate)
             .append(lastEmploymentDate, pojo.lastEmploymentDate)
             .append(lastWorkingDate, pojo.lastWorkingDate)
             .append(title, pojo.title)
             .append(staffType, pojo.staffType)
             .append(contractRef, pojo.contractRef)
             .append(residentialAddress, pojo.residentialAddress)
             .append(postalAddress, pojo.postalAddress)
             .append(referee, pojo.referee)
             .append(rChineseName, pojo.rChineseName)
             .append(relationship, pojo.relationship)
             .append(refereeTel, pojo.refereeTel)
             .append(socialInsuranceCard, pojo.socialInsuranceCard)
             .append(isSocialInsuranceCard, pojo.isSocialInsuranceCard) 
             .append(nativePlace, pojo.nativePlace)
             .append(telHome, pojo.telHome)
             .append(telMobile, pojo.telMobile)
             .append(email, pojo.email)
             .append(rank, pojo.rank)
             .append(remarks, pojo.remarks)
             .append(marital, pojo.marital)
             .append(nationality, pojo.nationality)
             .append(staffGroup, pojo.staffGroup)
             .append(referee2, pojo.referee2)
             .append(rChineseName2, pojo.rChineseName2)
             .append(relationship2, pojo.relationship2)
             .append(refereeTel2, pojo.refereeTel2)
             .append(spouseName, pojo.spouseName)
             .append(spouseIDNo, pojo.spouseIDNo)
             .append(placeOfBirth, pojo.placeOfBirth)
             ).isEquals();
    }


    /**
    * {@inheritDoc}
    */
     public int hashCode() {
        return   new  HashCodeBuilder( 17 ,  37 )
             .append(surname)
             .append(givenName)
             .append(nickName)
             .append(chineseName)
             .append(gender)
             .append(birthday)
             .append(status)
             .append(joinDate)
             .append(probationDate)
             .append(lastEmploymentDate)
             .append(lastWorkingDate) 
             .append(title)
             .append(staffType)
             .append(contractRef)
             .append(residentialAddress)
             .append(postalAddress)
             .append(referee)
             .append(rChineseName)
             .append(relationship)
             .append(refereeTel)
             .append(socialInsuranceCard)
             .append(isSocialInsuranceCard)
             .append(nativePlace)
             .append(telHome)
             .append(telMobile)
             .append(email)
             .append(rank)
             .append(remarks)
             .append(marital)
             .append(nationality)
             .append(staffGroup)
             .append(referee2)
             .append(rChineseName2)
             .append(relationship2)
             .append(refereeTel2)
             .append(spouseName)
             .append(spouseIDNo)
             .append(placeOfBirth)
             .toHashCode();
    }


    /**
    * {@inheritDoc}
    */
     public String toString() {
        StringBuffer sb = new StringBuffer(getClass().getSimpleName());
        sb.append(" [");
        sb.append("staffID").append("='").append(getStaffNo()).append("', ");
        sb.append("surname").append("='").append(getSurname()).append("', ");
        sb.append("givenName").append("='").append(getGivenName()).append("', ");
        sb.append("nickName").append("='").append(getNickName()).append("', ");
        sb.append("chineseName").append("='").append(getChineseName()).append("', ");
        sb.append("gender").append("='").append(getGender()).append("', ");
        sb.append("birthday").append("='").append(getBirthday()).append("', ");
        sb.append("status").append("='").append(getStatus()).append("', ");
        sb.append("joinDate").append("='").append(getJoinDate()).append("', ");
        sb.append("probationDate").append("='").append(getProbationDate()).append("', ");
        sb.append("lastEmploymentDate").append("='").append(getLastEmploymentDate()).append("', ");
        sb.append("lastWorkingDate").append("='").append(getLastWorkingDate()).append("', ");
        sb.append("title").append("='").append(getTitle()).append("', ");
        sb.append("staffType").append("='").append(getStaffType()).append("', ");
        sb.append("contractRef").append("='").append(getContractRef()).append("', ");
        sb.append("residentialAddress").append("='").append(getResidentialAddress()).append("', ");
        sb.append("postalAddress").append("='").append(getPostalAddress()).append("', ");
        sb.append("referee").append("='").append(getReferee()).append("', ");
        sb.append("rChineseName").append("='").append(getRChineseName()).append("', ");
        sb.append("relationship").append("='").append(getRelationship()).append("', ");
        sb.append("refereeTel").append("='").append(getRefereeTel()).append("', ");
        sb.append("socialInsuranceCard").append("='").append(getSocialInsuranceCard()).append("', ");
        sb.append("isSocialInsuranceCard").append("='").append(getIsSocialInsuranceCard()).append("', ");
        sb.append("nativePlace").append("='").append(getNativePlace()).append("', ");
        sb.append("telHome").append("='").append(getTelHome()).append("', ");
        sb.append("telMobile").append("='").append(getTelMobile()).append("', ");
        sb.append("email").append("='").append(getEmail()).append("', ");
        sb.append("rank").append("='").append(getRank()).append("', ");
        sb.append("remarks").append("='").append(getRemarks()).append("', ");
        sb.append("marital").append("='").append(getMarital()).append("', ");
        sb.append("nationality").append("='").append(getNationality()).append("', ");
        sb.append("staffGroup").append("='").append(getStaffGroup()).append("', ");
        sb.append("referee2").append("='").append(getReferee2()).append("', ");
        sb.append("rChineseName2").append("='").append(getRChineseName2()).append("', ");
        sb.append("relationship2").append("='").append(getRelationship2()).append("', ");
        sb.append("refereeTel2").append("='").append(getRefereeTel2()).append("', ");
        sb.append("spouseName").append("='").append(getSpouseName()).append("', ");
        sb.append("spouseIDNo").append("='").append(getSpouseIDNo()).append("', ");
        sb.append("placeOfBirth").append("='").append(getPlaceOfBirth()).append("', ");
        sb.append("]");
        
        return sb.toString();
    }

}
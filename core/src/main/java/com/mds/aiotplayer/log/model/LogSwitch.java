/**
 * The contents of this file are subject to the license and copyright
 * detailed in the LICENSE and NOTICE files at the root of the source
 * tree and available online at
 *
 * https://github.com/chinamds/license/
 */
// Created using LayerGen 4.0

package com.mds.aiotplayer.log.model;

import com.mds.aiotplayer.common.model.IdEntity;
import com.mds.aiotplayer.common.model.DataEntity;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.mds.aiotplayer.common.model.JsonDateSerializer;

import org.hibernate.annotations.Type;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.bridge.builtin.IntegerBridge;
import  org.apache.commons.lang.builder.HashCodeBuilder;
import  org.apache.commons.lang.builder.EqualsBuilder;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.CascadeType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import javax.xml.bind.annotation.XmlRootElement;

import java.io.Serializable;
import java.math.BigDecimal;

@Entity
@Table(name="log_switch", uniqueConstraints = @UniqueConstraint(columnNames={"strUniqueName", "nLogType"}))
@Indexed
@XmlRootElement
public class LogSwitch extends IdEntity implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 645208673539062428L;
	private String strUniqueName;
    private byte nLogType;
    private short nSwitch;
    private Date dtLastUpdate;
     
    @JsonProperty(value = "strUniqueName")
    @Column(name="strUniqueName", nullable=false, length=50)
    @Field
    public String getUniqueName(){
        return this.strUniqueName;
    }
    
    public void setUniqueName(String strUniqueName){
        this.strUniqueName = strUniqueName;
    }
    
    @JsonProperty(value = "nLogType")
    @Column(name="nLogType", nullable=false)
    @Type(type="org.hibernate.type.ByteType")
    @FieldBridge(impl = IntegerBridge.class)
    @Field
    public byte getLogType(){
        return this.nLogType;
    }
    
    public void setLogType(byte nLogType){
        this.nLogType = nLogType;
    }
    
    @JsonProperty(value = "nSwitch")
    @Column(name="nSwitch", nullable=false)
    @Field
    public short get_Switch(){
        return this.nSwitch;
    }
    
    public void set_Switch(short nSwitch){
        this.nSwitch = nSwitch;
    }
    
    @JsonProperty(value = "dtLastUpdate")
    @JsonSerialize(using = JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dtLastUpdate", nullable=false, length=19)
    @Field
    public Date getLastUpdate(){
        return this.dtLastUpdate;
    }
    
    public void setLastUpdate(Date dtLastUpdate){
        this.dtLastUpdate = dtLastUpdate;
    }
    


    /**
    * {@inheritDoc}
    */
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        LogSwitch pojo = (LogSwitch)o;
        return (new EqualsBuilder()
             .append(strUniqueName, pojo.strUniqueName)
             .append(nLogType, pojo.nLogType)
             .append(nSwitch, pojo.nSwitch)
             .append(dtLastUpdate, pojo.dtLastUpdate)
             ).isEquals();
    }


    /**
    * {@inheritDoc}
    */
     public int hashCode() {
        return   new  HashCodeBuilder( 17 ,  37 )
             .append(strUniqueName)
             .append(nLogType)
             .append(nSwitch)
             .append(dtLastUpdate)
             .toHashCode();
    }


    /**
    * {@inheritDoc}
    */
     public String toString() {
        StringBuffer sb = new StringBuffer(getClass().getSimpleName());
        sb.append(" [");
        sb.append("uiID").append("='").append(getId()).append("', ");
        sb.append("strUniqueName").append("='").append(getUniqueName()).append("', ");
        sb.append("nLogType").append("='").append(getLogType()).append("', ");
        sb.append("nSwitch").append("='").append(get_Switch()).append("', ");
        sb.append("dtLastUpdate").append("='").append(getLastUpdate()).append("', ");
        sb.append("]");
        
        return sb.toString();
    }

}
// Created using LayerGen 3.5

package com.mds.aiotplayer.cm.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.mds.aiotplayer.common.model.IdEntity;
import com.mds.aiotplayer.core.ApprovalAction;
import com.mds.aiotplayer.common.model.DataEntity;
import com.mds.aiotplayer.sys.model.User;
import com.mds.aiotplayer.wf.model.WorkflowDetail;

import org.hibernate.annotations.Type;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.bridge.builtin.IntegerBridge;
import  org.apache.commons.lang.builder.HashCodeBuilder;
import  org.apache.commons.lang.builder.EqualsBuilder;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.CascadeType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import javax.xml.bind.annotation.XmlRootElement;

import java.io.Serializable;
import java.math.BigDecimal;

@Entity
@Table(name="cm_dailylist_activity", uniqueConstraints = @UniqueConstraint(columnNames={"dailylist_workflow_id", "workflow_detail_id"}) )
@Indexed
@XmlRootElement
public class DailyListActivity extends DataEntity implements Serializable {
    /**
	 * 
	 */
	private static final long serialVersionUID = -4375735139361250940L;
	/**
	 * 
	 */
	private Long workflowDetailId;
    private Long userId;
    private String remark;
    private ApprovalAction approvalAction;
    private Long dailylistWorkflowId;
    
    private DailyListWorkflow dailyListWorkflow;
    private WorkflowDetail workflowDetail;
    private User          user;
    
    public DailyListActivity() {
    	super();
    }
    
    public DailyListActivity(DailyListWorkflow dailyListWorkflow, WorkflowDetail workflowDetail, User user, ApprovalAction approvalAction, String loginUser) {
    	super(loginUser);
    	
    	this.dailyListWorkflow = dailyListWorkflow;
    	this.workflowDetail = workflowDetail;
    	this.user = user;
    	this.approvalAction = approvalAction;
    }
     
    @ManyToOne
    @JoinColumn(name="dailylist_workflow_id", nullable=false)
    public DailyListWorkflow getDailyListWorkflow() {
		return dailyListWorkflow;
	}

	public void setDailyListWorkflow(DailyListWorkflow dailyListWorkflow) {
		this.dailyListWorkflow = dailyListWorkflow;
	}

	@ManyToOne
    @JoinColumn(name="workflow_detail_id", nullable=false)
	public WorkflowDetail getWorkflowDetail() {
		return workflowDetail;
	}

	public void setWorkflowDetail(WorkflowDetail workflowDetail) {
		this.workflowDetail = workflowDetail;
	}

	@ManyToOne
    @JoinColumn(name="user_id", nullable=true)
	public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	/*@JsonProperty(value = "WorkflowDetailID")
    @Column(name="WorkflowDetailID", nullable=false)
    @Field*/
	@Transient
    public Long getWorkflowDetailId(){
        return this.workflowDetailId;
    }
    
    public void setWorkflowDetailId(Long workflowDetailId){
        this.workflowDetailId = workflowDetailId;
    }
    
   /* @JsonProperty(value = "UserID")
    @Column(name="UserID")
    @Field*/
    @Transient
    public Long getUserId(){
        return this.userId;
    }
    
    public void setUserId(Long userId){
        this.userId = userId;
    }
    
    @JsonProperty(value = "Remark")
    @Column(name="remark")
    @Type(type="text")
    @Field
    public String getRemark(){
        return this.remark;
    }
    
    public void setRemark(String remark){
        this.remark = remark;
    }
    
    @JsonProperty(value = "ApprovalAction")
    @Column(name="approval_action", nullable=false, length=20)
    @Enumerated(EnumType.STRING)
    @Field
    public ApprovalAction getApprovalAction(){
        return this.approvalAction;
    }
    
    public void setApprovalAction(ApprovalAction approvalAction){
        this.approvalAction = approvalAction;
    }
    
    /*@JsonProperty(value = "EventWorkflowID")
    @Column(name="EventWorkflowID", nullable=false)
    @Field*/
    @Transient
    public Long getEventWorkflowId(){
        return this.dailylistWorkflowId;
    }
    
    public void setEventWorkflowId(Long dailylistWorkflowId){
        this.dailylistWorkflowId = dailylistWorkflowId;
    }
    


    /**
    * {@inheritDoc}
    */
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        DailyListActivity pojo = (DailyListActivity)o;
        return (new EqualsBuilder()
             .append(workflowDetailId, pojo.workflowDetailId)
             .append(userId, pojo.userId)
             .append(remark, pojo.remark)
             .append(approvalAction, pojo.approvalAction)
             .append(dailylistWorkflowId, pojo.dailylistWorkflowId)
             ).isEquals();
    }


    /**
    * {@inheritDoc}
    */
     public int hashCode() {
        return   new  HashCodeBuilder( 17 ,  37 )
             .append(workflowDetailId)
             .append(userId)
             .append(remark)
             .append(approvalAction)
             .append(dailylistWorkflowId)
             .toHashCode();
    }


    /**
    * {@inheritDoc}
    */
     public String toString() {
        StringBuffer sb = new StringBuffer(getClass().getSimpleName());
        sb.append(" [");
        sb.append("uiID").append("='").append(getId()).append("', ");
        sb.append("workflowDetailId").append("='").append(getWorkflowDetailId()).append("', ");
        sb.append("userId").append("='").append(getUserId()).append("', ");
        sb.append("remark").append("='").append(getRemark()).append("', ");
        sb.append("approvalAction").append("='").append(getApprovalAction()).append("', ");
        sb.append("dailylistWorkflowId").append("='").append(getEventWorkflowId()).append("', ");
        sb.append("]");
        
        return sb.toString();
    }

}
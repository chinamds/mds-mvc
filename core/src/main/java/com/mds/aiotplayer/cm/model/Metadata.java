/**
 * The contents of this file are subject to the license and copyright
 * detailed in the LICENSE and NOTICE files at the root of the source
 * tree and available online at
 *
 * https://github.com/chinamds/license/
 */
// Created using LayerGen 3.5

package com.mds.aiotplayer.cm.model;

import com.mds.aiotplayer.common.model.IdEntity;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.mds.aiotplayer.common.model.JsonDateSerializer;
import com.mds.aiotplayer.core.MetadataItemName;

import org.hibernate.annotations.Type;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.bridge.builtin.IntegerBridge;
import  org.apache.commons.lang.builder.HashCodeBuilder;
import  org.apache.commons.lang.builder.EqualsBuilder;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.CascadeType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import javax.xml.bind.annotation.XmlRootElement;

import java.io.Serializable;
import java.math.BigDecimal;

@Entity
@Table(name="cm_metadata" )
@Indexed
@XmlRootElement
public class Metadata extends IdEntity implements Serializable {
    /**
	 * 
	 */
	private static final long serialVersionUID = -611302844623995642L;
	private MetadataItemName metaName;
    private String rawValue;
    private String value;
     
    private ContentObject contentObject;
    private Album album;
    
    public Metadata(){
		super();
	}
    
    public Metadata(final ContentObject contentObject, final Album album, final MetadataItemName metaName, final String rawValue, final String value){
		super();
		this.contentObject = contentObject;
		this.album = album;
		this.metaName = metaName;
		this.rawValue = rawValue;
		this.value = value;
	}
    
    @ManyToOne
    @JoinColumn(name="contentobject_id", nullable=true)
    public ContentObject getContentObject() {
		return contentObject;
	}

	public void setContentObject(ContentObject contentObject) {
		this.contentObject = contentObject;
	}
	
    @JsonProperty(value = "MetaName")
    @Column(name="meta_name", nullable=false, length=100)
    @Enumerated(EnumType.STRING)
    @Field
    public MetadataItemName getMetaName(){
        return this.metaName;
    }
    
    public void setMetaName(MetadataItemName metaName){
        this.metaName = metaName;
    }
        
    @ManyToOne
    @JoinColumn(name="album_id", nullable=true)
    public Album getAlbum() {
		return album;
	}

	public void setAlbum(Album album) {
		this.album = album;
	}

	@JsonProperty(value = "RawValue")
    @Column(name="raw_value")
    @Type(type="text")
    @Field
    public String getRawValue(){
        return this.rawValue;
    }
    
    public void setRawValue(String rawValue){
        this.rawValue = rawValue;
    }
    
    @JsonProperty(value = "Value")
    @Column(name="value", nullable=false)
    @Type(type="text")
    @Field
    public String getValue(){
        return this.value;
    }
    
    public void setValue(String value){
        this.value = value;
    }
    


    /**
    * {@inheritDoc}
    */
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Metadata pojo = (Metadata)o;
        return (new EqualsBuilder()
             .append(metaName, pojo.metaName)
             .append(rawValue, pojo.rawValue)
             .append(value, pojo.value)
             ).isEquals();
    }


    /**
    * {@inheritDoc}
    */
     public int hashCode() {
        return   new  HashCodeBuilder( 17 ,  37 )
             .append(metaName)
             .append(rawValue)
             .append(value)
             .toHashCode();
    }


    /**
    * {@inheritDoc}
    */
     public String toString() {
        StringBuffer sb = new StringBuffer(getClass().getSimpleName());
        sb.append(" [");
        sb.append("metadataId").append("='").append(getId()).append("', ");
        sb.append("metaName").append("='").append(getMetaName()).append("', ");
        sb.append("rawValue").append("='").append(getRawValue()).append("', ");
        sb.append("value").append("='").append(getValue()).append("', ");
        sb.append("]");
        
        return sb.toString();
    }

}
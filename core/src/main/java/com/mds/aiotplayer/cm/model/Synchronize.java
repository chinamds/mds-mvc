// Created using LayerGen 3.5

package com.mds.aiotplayer.cm.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.mds.aiotplayer.common.model.BaseObject;
import com.mds.aiotplayer.common.model.IdEntity;
import com.mds.aiotplayer.common.model.JsonDateSerializer;
import com.mds.aiotplayer.core.SynchronizationState;

import org.hibernate.annotations.Type;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.bridge.builtin.IntegerBridge;
import  org.apache.commons.lang.builder.HashCodeBuilder;
import  org.apache.commons.lang.builder.EqualsBuilder;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.CascadeType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import javax.xml.bind.annotation.XmlRootElement;

import java.io.Serializable;
import java.math.BigDecimal;

@Entity
@Table(name="cm_synchronize", uniqueConstraints = @UniqueConstraint(columnNames={"gallery_id"}) )
@Indexed
@XmlRootElement
public class Synchronize extends IdEntity implements Serializable {
    /**
	 * 
	 */
	private static final long serialVersionUID = 8739912362235857215L;
	//private int fKGalleryId;
    private String synchId;
    private SynchronizationState synchState;
    private int totalFiles;
    private int currentFileIndex;
    
    private Gallery gallery;
 
/*    @JsonProperty(value = "FKGalleryId")
    @Id
    //@GeneratedValue(strategy = GenerationType.AUTO)
    @DocumentId
    public int getFKGalleryId(){
        return this.fKGalleryId;
    }
    
    public void setFKGalleryId(int fKGalleryId){
        this.fKGalleryId = fKGalleryId;
    }*/
    
    @ManyToOne(optional=false)
    @JoinColumn(name="gallery_id", nullable=false)
    public Gallery getGallery() {
		return gallery;
	}

	public void setGallery(Gallery gallery) {
		this.gallery = gallery;
	}
    
    @JsonProperty(value = "SynchId")
    @Column(name="synch_id", nullable=false, length=46)
    @Field
    public String getSynchId(){
        return this.synchId;
    }
    
    public void setSynchId(String synchId){
        this.synchId = synchId;
    }
    
    @JsonProperty(value = "SynchState")
    @Column(name="synch_state", nullable=false, length=50)
    @Enumerated(EnumType.STRING)
    @Field
    public SynchronizationState getSynchState(){
        return this.synchState;
    }
    
    public void setSynchState(SynchronizationState synchState){
        this.synchState = synchState;
    }
    
    @JsonProperty(value = "TotalFiles")
    @Column(name="total_files", nullable=false)
    @Field
    public int getTotalFiles(){
        return this.totalFiles;
    }
    
    public void setTotalFiles(int totalFiles){
        this.totalFiles = totalFiles;
    }
    
    @JsonProperty(value = "CurrentFileIndex")
    @Column(name="current_file_index", nullable=false)
    @Field
    public int getCurrentFileIndex(){
        return this.currentFileIndex;
    }
    
    public void setCurrentFileIndex(int currentFileIndex){
        this.currentFileIndex = currentFileIndex;
    }
    


    /**
    * {@inheritDoc}
    */
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Synchronize pojo = (Synchronize)o;
        return (new EqualsBuilder()
             .append(synchId, pojo.synchId)
             .append(synchState, pojo.synchState)
             .append(totalFiles, pojo.totalFiles)
             .append(currentFileIndex, pojo.currentFileIndex)
             ).isEquals();
    }


    /**
    * {@inheritDoc}
    */
     public int hashCode() {
        return   new  HashCodeBuilder( 17 ,  37 )
             .append(synchId)
             .append(synchState)
             .append(totalFiles)
             .append(currentFileIndex)
             .toHashCode();
    }


    /**
    * {@inheritDoc}
    */
     public String toString() {
        StringBuffer sb = new StringBuffer(getClass().getSimpleName());
        sb.append(" [");
        sb.append("gallery_Id").append("='").append(getGallery().getId()).append("', ");
        sb.append("synchId").append("='").append(getSynchId()).append("', ");
        sb.append("synchState").append("='").append(getSynchState()).append("', ");
        sb.append("totalFiles").append("='").append(getTotalFiles()).append("', ");
        sb.append("currentFileIndex").append("='").append(getCurrentFileIndex()).append("', ");
        sb.append("]");
        
        return sb.toString();
    }

	@Override
	public void copyFrom(Object source) {
		// TODO Auto-generated method stub
		
	}

}
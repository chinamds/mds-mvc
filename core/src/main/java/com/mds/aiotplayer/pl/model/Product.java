/**
 * The contents of this file are subject to the license and copyright
 * detailed in the LICENSE and NOTICE files at the root of the source
 * tree and available online at
 *
 * https://github.com/chinamds/license/
 */
// Created using LayerGen 4.0

package com.mds.aiotplayer.pl.model;

import com.mds.aiotplayer.common.model.IdEntity;
import com.mds.aiotplayer.common.model.DataEntity;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.common.collect.Lists;
import com.mds.aiotplayer.common.model.JsonDateSerializer;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;
import org.hibernate.annotations.Type;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.bridge.builtin.IntegerBridge;
import  org.apache.commons.lang.builder.HashCodeBuilder;
import  org.apache.commons.lang.builder.EqualsBuilder;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.CascadeType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import javax.xml.bind.annotation.XmlRootElement;

import java.io.Serializable;
import java.math.BigDecimal;

@Entity
@Table(name="pl_product", uniqueConstraints = @UniqueConstraint(columnNames={"catalogue_id", "nProductIndex"}))
@Indexed
@XmlRootElement
public class Product extends IdEntity implements Serializable {
    /**
	 * 
	 */
	private static final long serialVersionUID = -6299403629473764154L;
	private Catalogue catalogue; //catalogue
    private short nProductIndex;
    private String strProductName;
    private String strProductDesc;
    private String strImageFile;
    private String strBtnEvent;
    private Short nLanguage;
    private Byte[] arrProductName;
    
    private List<Zone> zones = Lists.newArrayList(); //zones 
         
    @JsonProperty(value = "nProductIndex")
    @Column(name="nProductIndex", nullable=false)
    @Field
    public short getProductIndex(){
        return this.nProductIndex;
    }
    
    public void setProductIndex(short nProductIndex){
        this.nProductIndex = nProductIndex;
    }
    
    @JsonProperty(value = "strProductName")
    @Column(name="strProductName", nullable=false, length=20)
    @Field
    public String getProductName(){
        return this.strProductName;
    }
    
    public void setProductName(String strProductName){
        this.strProductName = strProductName;
    }
    
    @JsonProperty(value = "strProductDesc")
    @Column(name="strProductDesc", length=50)
    @Field
    public String getProductDesc(){
        return this.strProductDesc;
    }
    
    public void setProductDesc(String strProductDesc){
        this.strProductDesc = strProductDesc;
    }
    
    @JsonProperty(value = "strImageFile")
    @Column(name="strImageFile", length=1024)
    @Field
    public String getImageFile(){
        return this.strImageFile;
    }
    
    public void setImageFile(String strImageFile){
        this.strImageFile = strImageFile;
    }
    
    @JsonProperty(value = "strBtnEvent")
    @Column(name="strBtnEvent", length=20)
    @Field
    public String getBtnEvent(){
        return this.strBtnEvent;
    }
    
    public void setBtnEvent(String strBtnEvent){
        this.strBtnEvent = strBtnEvent;
    }
    
    @JsonProperty(value = "nLanguage")
    @Column(name="nLanguage")
    @Field
    public Short getLanguage(){
        return this.nLanguage;
    }
    
    public void setLanguage(Short nLanguage){
        this.nLanguage = nLanguage;
    }
    
    @JsonProperty(value = "arrProductName")
    @Lob
    @Basic(fetch = FetchType.LAZY )
    @Column(name="arrProductName", columnDefinition = "BLOB")
    @Type(type="org.hibernate.type.WrappedMaterializedBlobType")
    public Byte[] getArrProductName(){
        return this.arrProductName;
    }
    
    public void setArrProductName(Byte[] arrProductName){
        this.arrProductName = arrProductName;
    }
    


    /**
	 * @return the catalogue
	 */
    @ManyToOne
    @JoinColumn(name="catalogue_id", nullable=false)
	public Catalogue getCatalogue() {
		return catalogue;
	}

	/**
	 * @param catalogue the catalogue to set
	 */
	public void setCatalogue(Catalogue catalogue) {
		this.catalogue = catalogue;
	}

	/**
	 * @return the zones
	 */
	@OneToMany(cascade=CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true, mappedBy="product")
	@OrderBy(value="id") 
	@Fetch(FetchMode.SUBSELECT)
	@NotFound(action = NotFoundAction.IGNORE)
	
	public List<Zone> getZones() {
		return zones;
	}

	/**
	 * @param zones the zones to set
	 */
	public void setZones(List<Zone> zones) {
		this.zones = zones;
	}

	/**
    * {@inheritDoc}
    */
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Product pojo = (Product)o;
        return (new EqualsBuilder()
             .append(getCatalogue().getId(), pojo.getCatalogue().getId())
             .append(nProductIndex, pojo.nProductIndex)
             .append(strProductName, pojo.strProductName)
             .append(strProductDesc, pojo.strProductDesc)
             .append(strImageFile, pojo.strImageFile)
             .append(strBtnEvent, pojo.strBtnEvent)
             .append(nLanguage, pojo.nLanguage)
             .append(arrProductName, pojo.arrProductName)
             ).isEquals();
    }


    /**
    * {@inheritDoc}
    */
     public int hashCode() {
        return   new  HashCodeBuilder( 17 ,  37 )
             .append(catalogue.getId())
             .append(nProductIndex)
             .append(strProductName)
             .append(strProductDesc)
             .append(strImageFile)
             .append(strBtnEvent)
             .append(nLanguage)
             .append(arrProductName)
             .toHashCode();
    }


    /**
    * {@inheritDoc}
    */
     public String toString() {
        StringBuffer sb = new StringBuffer(getClass().getSimpleName());
        sb.append(" [");
        sb.append("uiID").append("='").append(getId()).append("', ");
        sb.append("catalogue_id").append("='").append(getCatalogue().getId()).append("', ");
        sb.append("nProductIndex").append("='").append(getProductIndex()).append("', ");
        sb.append("strProductName").append("='").append(getProductName()).append("', ");
        sb.append("strProductDesc").append("='").append(getProductDesc()).append("', ");
        sb.append("strImageFile").append("='").append(getImageFile()).append("', ");
        sb.append("strBtnEvent").append("='").append(getBtnEvent()).append("', ");
        sb.append("nLanguage").append("='").append(getLanguage()).append("', ");
        sb.append("arrProductName").append("='").append(getArrProductName()).append("', ");
        sb.append("]");
        
        return sb.toString();
    }

}
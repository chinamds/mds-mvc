// Created using LayerGen 3.5

package com.mds.i18n.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.google.common.collect.Lists;
import com.mds.common.model.IdEntity;
import com.mds.common.model.DataEntity;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;
import org.hibernate.annotations.Type;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.bridge.builtin.IntegerBridge;
import  org.apache.commons.lang.builder.HashCodeBuilder;
import  org.apache.commons.lang.builder.EqualsBuilder;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.CascadeType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import javax.xml.bind.annotation.XmlRootElement;

import java.io.Serializable;
import java.math.BigDecimal;

@Entity
@Table(name="i18n_localized_resource")
@Indexed
@XmlRootElement
public class LocalizedResource extends IdEntity implements Serializable {
    /**
	 * 
	 */
	private static final long serialVersionUID = 1051979967835334988L;
    //private String cultureCode;
    private String value;
    private NeutralResource neutralResource;
    private Culture culture;
    
    @ManyToOne(fetch=FetchType.LAZY, optional=false)
	@JoinColumn(name="culture_id", nullable=false)
	@NotFound(action = NotFoundAction.IGNORE)
    @JsonIgnore
	public Culture getCulture() {
		return culture;
	}
	
	public void setCulture(Culture culture) {
		this.culture = culture;
	}
	
	@ManyToOne(fetch=FetchType.LAZY, optional=false)
	@JoinColumn(name="neutralresource_id", nullable=false)
	@NotFound(action = NotFoundAction.IGNORE)
	@JsonIgnore
	public NeutralResource getNeutralResource() {
		return neutralResource;
	}
	
	public void setNeutralResource(NeutralResource neutralResource) {
		this.neutralResource = neutralResource;
	}
	
	@JsonProperty(value = "resourceKey")
    @Transient
    @Field
    public String getResourceKey(){
    	if (this.neutralResource != null)
    		return this.neutralResource.getResourceKey();
    	
    	return "";
    }
	
    @JsonProperty(value = "cultureCode")
    @Transient
    @Field
    public String getCultureCode(){
    	if (this.culture != null)
    		return this.culture.getCultureCode();
    	
    	return "";
    }
        
    @JsonProperty(value = "value")
    @Column(name="value")
    @Type(type="text")
    @Field
    public String getValue(){
        return this.value;
    }
    
    public void setValue(String value){
        this.value = value;
    }

    /**
    * {@inheritDoc}
    */
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        LocalizedResource pojo = (LocalizedResource)o;
        return (new EqualsBuilder()
             //.append(cultureCode, pojo.cultureCode)
             .append(value, pojo.value)
             ).isEquals();
    }


    /**
    * {@inheritDoc}
    */
     public int hashCode() {
        return   new  HashCodeBuilder( 17 ,  37 )
             //.append(cultureCode)
             .append(value)
             .toHashCode();
    }


    /**
    * {@inheritDoc}
    */
     public String toString() {
        StringBuffer sb = new StringBuffer(getClass().getSimpleName());
        sb.append(" [");
        //sb.append("culture_code").append("='").append(getCultureCode()).append("', ");
        sb.append("value").append("='").append(getValue()).append("', ");
        sb.append("]");
        
        return sb.toString();
    }

    @Override
  	public void copyFrom(Object source) {
     	LocalizedResource src = (LocalizedResource)source;
  		this.neutralResource = src.getNeutralResource(); 	// resouce class
  		this.culture = src.getCulture(); 	// resource key
  		this.value = src.getValue(); 	// value
  	}
}
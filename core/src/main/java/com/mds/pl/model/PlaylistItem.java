/**
 * Copyright (c) 2016-2017 https://github.com/chinamds
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 */
// Created using LayerGen 4.0

package com.mds.pl.model;

import com.mds.common.model.DataEntity;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.mds.common.model.JsonDateSerializer;

import org.hibernate.annotations.Type;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.bridge.builtin.IntegerBridge;
import  org.apache.commons.lang.builder.HashCodeBuilder;
import  org.apache.commons.lang.builder.EqualsBuilder;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.CascadeType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import javax.xml.bind.annotation.XmlRootElement;

import java.io.Serializable;
import java.math.BigDecimal;

@Entity
@Table(name="pl_playlistitem", uniqueConstraints = @UniqueConstraint(columnNames={"playlist_id", "nItemIndex"}))
@Indexed
@XmlRootElement
public class PlaylistItem extends DataEntity implements Serializable {
    /**
	 * 
	 */
	private static final long serialVersionUID = -2802581694052506836L;
	private Playlist playlist;
    private byte nItemIndex;
    private short nGroupIndex;
    private String catalogueName;
    private String dtStart;
    private String dtEnd;
    private short nPlayTimes;
    private short nItemType;
    private boolean bIsTimeSchedule;
    private boolean bIsGroup;
    private Byte[] byItemContent;
         
    /**
	 * @return the playlist
	 */
    @ManyToOne
    @JoinColumn(name="playlist_id", nullable=false)
	public Playlist getPlaylist() {
		return playlist;
	}

	/**
	 * @param playlist the playlist to set
	 */
	public void setPlaylist(Playlist playlist) {
		this.playlist = playlist;
	}

	@JsonProperty(value = "nItemIndex")
    @Column(name="nItemIndex", nullable=false)
    @Type(type="org.hibernate.type.ByteType")
    @FieldBridge(impl = IntegerBridge.class)
    @Field
    public byte getItemIndex(){
        return this.nItemIndex;
    }
    
    public void setItemIndex(byte nItemIndex){
        this.nItemIndex = nItemIndex;
    }
    
    @JsonProperty(value = "nGroupIndex")
    @Column(name="nGroupIndex", nullable=false)
    @Field
    public short getGroupIndex(){
        return this.nGroupIndex;
    }
    
    public void setGroupIndex(short nGroupIndex){
        this.nGroupIndex = nGroupIndex;
    }
    
    @JsonProperty(value = "catalogueName")
    @Column(name="catalogueName", length=20)
    @Field
    public String getCatalogueName(){
        return this.catalogueName;
    }
    
    public void setCatalogueName(String catalogueName){
        this.catalogueName = catalogueName;
    }
    
    @JsonProperty(value = "dtStart")
    @Column(name="dtStart", length=19)
    @Field
    public String getDtStart(){
        return this.dtStart;
    }
    
    public void setDtStart(String dtStart){
        this.dtStart = dtStart;
    }
    
    @JsonProperty(value = "dtEnd")
    @Column(name="dtEnd", length=19)
    @Field
    public String getDtEnd(){
        return this.dtEnd;
    }
    
    public void setDtEnd(String dtEnd){
        this.dtEnd = dtEnd;
    }
    
    @JsonProperty(value = "nPlayTimes")
    @Column(name="nPlayTimes", nullable=false)
    @Field
    public short getPlayTimes(){
        return this.nPlayTimes;
    }
    
    public void setPlayTimes(short nPlayTimes){
        this.nPlayTimes = nPlayTimes;
    }
    
    @JsonProperty(value = "nItemType")
    @Column(name="nItemType", nullable=false)
    @Field
    public short getItemType(){
        return this.nItemType;
    }
    
    public void setItemType(short nItemType){
        this.nItemType = nItemType;
    }
    
    @JsonProperty(value = "bIsTimeSchedule")
    @Column(name="bIsTimeSchedule", nullable=false)
    @Field
    public boolean isIsTimeSchedule(){
        return this.bIsTimeSchedule;
    }
    
    public void setIsTimeSchedule(boolean bIsTimeSchedule){
        this.bIsTimeSchedule = bIsTimeSchedule;
    }
    
    @JsonProperty(value = "bIsGroup")
    @Column(name="bIsGroup", nullable=false)
    @Field
    public boolean isIsGroup(){
        return this.bIsGroup;
    }
    
    public void setIsGroup(boolean bIsGroup){
        this.bIsGroup = bIsGroup;
    }
    
    @JsonProperty(value = "byItemContent")
    @Lob
    @Basic(fetch = FetchType.LAZY )
    @Column(name="byItemContent", columnDefinition = "BLOB")
    @Type(type="org.hibernate.type.WrappedMaterializedBlobType")
    public Byte[] getItemContent(){
        return this.byItemContent;
    }
    
    public void setItemContent(Byte[] byItemContent){
        this.byItemContent = byItemContent;
    }
    


    /**
    * {@inheritDoc}
    */
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        PlaylistItem pojo = (PlaylistItem)o;
        return (new EqualsBuilder()
             .append(getPlaylist().getId(), pojo.getPlaylist().getId())
             .append(nItemIndex, pojo.nItemIndex)
             .append(nGroupIndex, pojo.nGroupIndex)
             .append(catalogueName, pojo.catalogueName)
             .append(dtStart, pojo.dtStart)
             .append(dtEnd, pojo.dtEnd)
             .append(nPlayTimes, pojo.nPlayTimes)
             .append(nItemType, pojo.nItemType)
             .append(bIsTimeSchedule, pojo.bIsTimeSchedule)
             .append(bIsGroup, pojo.bIsGroup)
             .append(byItemContent, pojo.byItemContent)
             ).isEquals();
    }


    /**
    * {@inheritDoc}
    */
     public int hashCode() {
        return   new  HashCodeBuilder( 17 ,  37 )
             .append(playlist.getId())
             .append(nItemIndex)
             .append(nGroupIndex)
             .append(catalogueName)
             .append(dtStart)
             .append(dtEnd)
             .append(nPlayTimes)
             .append(nItemType)
             .append(bIsTimeSchedule)
             .append(bIsGroup)
             .append(byItemContent)
             .toHashCode();
    }


    /**
    * {@inheritDoc}
    */
     public String toString() {
        StringBuffer sb = new StringBuffer(getClass().getSimpleName());
        sb.append(" [");
        sb.append("id").append("='").append(getId()).append("', ");
        sb.append("uiPlaylistID").append("='").append(getPlaylist().getId()).append("', ");
        sb.append("nItemIndex").append("='").append(getItemIndex()).append("', ");
        sb.append("nGroupIndex").append("='").append(getGroupIndex()).append("', ");
        sb.append("catalogueName").append("='").append(getCatalogueName()).append("', ");
        sb.append("dtStart").append("='").append(getDtStart()).append("', ");
        sb.append("dtEnd").append("='").append(getDtEnd()).append("', ");
        sb.append("nPlayTimes").append("='").append(getPlayTimes()).append("', ");
        sb.append("nItemType").append("='").append(getItemType()).append("', ");
        sb.append("bIsTimeSchedule").append("='").append(isIsTimeSchedule()).append("', ");
        sb.append("bIsGroup").append("='").append(isIsGroup()).append("', ");
        sb.append("byItemContent").append("='").append(getItemContent()).append("', ");
        sb.append("]");
        
        return sb.toString();
    }

}
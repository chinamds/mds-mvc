// Created using LayerGen 3.5

package com.mds.wf.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.mds.common.model.IdEntity;

import org.hibernate.annotations.Type;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.bridge.builtin.IntegerBridge;
import  org.apache.commons.lang.builder.HashCodeBuilder;
import  org.apache.commons.lang.builder.EqualsBuilder;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.CascadeType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import javax.xml.bind.annotation.XmlRootElement;

import java.io.Serializable;
import java.math.BigDecimal;

@Entity
@Table(name="wf_workflow_detail", uniqueConstraints = @UniqueConstraint(columnNames={"workflow_id", "activity_id"}) )
@Indexed
@XmlRootElement
public class WorkflowDetail extends IdEntity implements Serializable {
    /**
	 * 
	 */
	private static final long serialVersionUID = 5155777883223802931L;
	private Long workflowId;
    private Long activityId;
    private boolean approval;
    private boolean email;
    private Integer seq;
    private boolean apply;
    private boolean cancel;
    
    private Workflow workflow;
    private Activity activity;
    
    @ManyToOne
    @JoinColumn(name="workflow_id", nullable=false)
    public Workflow getWorkflow() {
		return workflow;
	}

	public void setWorkflow(Workflow workflow) {
		this.workflow = workflow;
	}

	@ManyToOne
	@JoinColumn(name="activity_id", nullable=false)
	public Activity getActivity() {
		return activity;
	}

	public void setActivity(Activity activity) {
		this.activity = activity;
	}

	/*@JsonProperty(value = "WorkflowID")
    @Column(name="WorkflowID", nullable=false, length=50)
    @Field*/
	@Transient
    public Long getWorkflowId(){
        return this.workflowId;
    }
    
    public void setWorkflowId(Long workflowId){
        this.workflowId = workflowId;
    }
    
    /*@JsonProperty(value = "ApproverTypeID")
    @Column(name="ApproverTypeID", nullable=false)
    @Field*/
    @Transient
    public Long getActivityId(){
        return this.activityId;
    }
    
    public void setActivityId(Long activityId){
        this.activityId = activityId;
    }
    
    @JsonProperty(value = "Approval")
    @Column(name="approval")
    @Field
    public boolean isApproval(){
        return this.approval;
    }
    
    public void setApproval(boolean approval){
        this.approval = approval;
    }
    
    @JsonProperty(value = "Email")
    @Column(name="email")
    @Field
    public boolean isEmail(){
        return this.email;
    }
    
    public void setEmail(boolean email){
        this.email = email;
    }
    
    @JsonProperty(value = "Seq")
    @Column(name="seq")
    @Field
    public Integer getSeq(){
        return this.seq;
    }
    
    public void setSeq(Integer seq){
        this.seq = seq;
    }
    
    @JsonProperty(value = "Apply")
    @Column(name="apply")
    @Field
    public boolean isApply(){
        return this.apply;
    }
    
    public void setApply(boolean apply){
        this.apply = apply;
    }
    
    @JsonProperty(value = "Cancel")
    @Column(name="cancel")
    @Field
    public boolean isCancel(){
        return this.cancel;
    }
    
    public void setCancel(boolean cancel){
        this.cancel = cancel;
    }


    /**
    * {@inheritDoc}
    */
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        WorkflowDetail pojo = (WorkflowDetail)o;
        return (new EqualsBuilder()
             .append(workflowId, pojo.workflowId)
             .append(activityId, pojo.activityId)
             .append(approval, pojo.approval)
             .append(email, pojo.email)
             .append(seq, pojo.seq)
             .append(apply, pojo.apply)
             .append(cancel, pojo.cancel)
             ).isEquals();
    }


    /**
    * {@inheritDoc}
    */
     public int hashCode() {
        return   new  HashCodeBuilder( 17 ,  37 )
             .append(workflowId)
             .append(activityId)
             .append(approval)
             .append(email)
             .append(seq)
             .append(apply)
             .append(cancel)
             .toHashCode();
    }


    /**
    * {@inheritDoc}
    */
     public String toString() {
        StringBuffer sb = new StringBuffer(getClass().getSimpleName());
        sb.append(" [");
        sb.append("detailID").append("='").append(getId()).append("', ");
        sb.append("workflowID").append("='").append(getWorkflowId()).append("', ");
        sb.append("approverTypeID").append("='").append(getActivityId()).append("', ");
        sb.append("approval").append("='").append(isApproval()).append("', ");
        sb.append("email").append("='").append(isEmail()).append("', ");
        sb.append("seq").append("='").append(getSeq()).append("', ");
        sb.append("apply").append("='").append(isApply()).append("', ");
        sb.append("cancel").append("='").append(isCancel()).append("', ");
        sb.append("]");
        
        return sb.toString();
    }

}
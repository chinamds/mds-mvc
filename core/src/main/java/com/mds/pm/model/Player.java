/**
 * Copyright (c) 2016-2017 
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 */
// Created using LayerGen 4.0

package com.mds.pm.model;

import com.mds.common.model.DataEntity;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.google.common.collect.Lists;
import com.mds.common.model.JsonDateSerializer;
import com.mds.msg.model.AHMessage;
import com.mds.pl.model.AHPlaylist;
import com.mds.ps.model.PlayerTuner;
import com.mds.sys.model.Organization;
import com.mds.util.DateUtils;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;
import org.hibernate.annotations.Type;
import org.hibernate.search.annotations.DocumentId;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.FieldBridge;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.IndexedEmbedded;
import org.hibernate.search.bridge.builtin.IntegerBridge;
import  org.apache.commons.lang.builder.HashCodeBuilder;
import  org.apache.commons.lang.builder.EqualsBuilder;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.CascadeType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.Lob;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import javax.xml.bind.annotation.XmlRootElement;

import java.io.Serializable;
import java.math.BigDecimal;

@Entity
@Table(name="pm_player", uniqueConstraints = {@UniqueConstraint(columnNames={"organization_id", "guidReg", "strUniqueName"}), @UniqueConstraint(columnNames={"organization_id", "strUniqueName"}), })
@Indexed
@XmlRootElement
public class Player extends DataEntity implements Serializable {
    /**
	 * 
	 */
	private static final long serialVersionUID = -8628856666298649553L;
	private String strServerAddress;
    private short nRetries;
    private String strDescription;
    private String strLogin;
    private String strPlayerName;
    private String strPassword;
    private String strUniqueName;
    private int nPort;
    private short nRetryDelay;
    private boolean bUsePASVMode;
    private boolean bUseFirewall;
    private String strDiskSerial;
    private String strLocation;
    private short nFtpPeriod;
    private short nBeforeDay;
    private int dwFtpContent;
    private boolean bReplaceFile;
    private String strMACAddress;
    private String strMACAddress1;
    private String strLocalAddress;
    private String strLocalLogin;
    private String strLocalPassword;
    private int nLocalPort;
    private String strTimeOuts;
    private String strDeviceID;
    private String strMACID;
    private String strPublicIP;
    private boolean bBinary;
    private Long dbLimit;
    private int dwConnectionTimeout;
    private String sUserAgent;
    private String sProxyServer;
    private Short connectionType;
    private Integer dwReadBufferSize;
    private Date dtRegTime;
    private String strMDSVersion;
    private boolean bOnline;
    private Date dtLastOnlineTime;
    private String strPhoneNumber;
    private String strPhoneNumberServer;
    private String guidReg;
    private Date dtStartup;
    private Date dtShutdown;
    private Date dtLastSyncTime;
    
    private Organization organization;	// organization
    
    private List<AHMessage> aHMessages = Lists.newArrayList(); // messages
    private List<AHPlaylist> aHPlaylists = Lists.newArrayList(); // ad-hoc playlists
    private List<PlayerTaskScheduler> playerTaskSchedulers = Lists.newArrayList(); // Player Task Schedulers
    private List<FileTransferTask> fileTransferTask = Lists.newArrayList(); // File transfer tasks
    private List<PlayerTuner> playerTuner = Lists.newArrayList(); //channel Mapping
    private List<PlayerOutput> playerOutputs = Lists.newArrayList(); // Player Outputs
    private List<PlayerStatus> playerStatuses = Lists.newArrayList(); // Player Statuses
    
    public Player() {
    	super();
    	
       this.bBinary=true;
	   this.dbLimit=0L;
	   this.dwConnectionTimeout=30000;
	   this.connectionType=(short)0;
	   this.dwReadBufferSize=1024;

		this.nRetries = 1;
		this.nPort = 21;
		this.nRetryDelay = 15;
		this.bUseFirewall = false;
		this.bUsePASVMode = false;
		this.nFtpPeriod = 7;
		this.nBeforeDay = 1;
		this.bReplaceFile = false;
		this.dwFtpContent = 65535;
		this.strTimeOuts = "05:00";
		this.strUniqueName = "";

		this.strMACAddress = "";
		this.strMACAddress1 = "";
		this.strLocalAddress = "";
		this.nLocalPort = 10025;
		
		this.sUserAgent = "";
		this.sProxyServer = "";
		this.strServerAddress = "";

		this.strDeviceID = "";
		this.strMACID = "";
		this.strPublicIP = "";
		this.strPhoneNumber  = "";
		this.strPhoneNumberServer  = "";
		this.guidReg = "";

		this.strMDSVersion = "";
		this.bOnline = false;
		this.dtShutdown = DateUtils.MinValue;
		this.dtStartup = DateUtils.MinValue;
		this.dtLastSyncTime = DateUtils.MinValue;
		this.dtLastOnlineTime = DateUtils.MinValue;
		this.dtRegTime = DateUtils.MinValue;
    }
    
    public Player(Organization organization) {
    	this();
    	this.organization = organization;
    }
    
    public Player(String id) {
    	this();
    	this.id = new Long(id);
    }
     
    @JsonProperty(value = "strServerAddress")
    @Column(name="strServerAddress", nullable=false, length=1024)
    @Field
    public String getServerAddress(){
        return this.strServerAddress;
    }
    
    public void setServerAddress(String strServerAddress){
        this.strServerAddress = strServerAddress;
    }
    
    @JsonProperty(value = "nRetries")
    @Column(name="nRetries", nullable=false)
    @Field
    public short getRetries(){
        return this.nRetries;
    }
    
    public void setRetries(short nRetries){
        this.nRetries = nRetries;
    }
    
    @JsonProperty(value = "strDescription")
    @Column(name="strDescription", length=255)
    @Field
    public String getDescription(){
        return this.strDescription;
    }
    
    public void setDescription(String strDescription){
        this.strDescription = strDescription;
    }
    
    @JsonProperty(value = "strLogin")
    @Column(name="strLogin", nullable=false, length=100)
    @Field
    public String getLogin(){
        return this.strLogin;
    }
    
    public void setLogin(String strLogin){
        this.strLogin = strLogin;
    }
    
    @JsonProperty(value = "strPlayerName")
    @Column(name="strPlayerName", nullable=false, length=100)
    @Field
    public String getPlayerName(){
        return this.strPlayerName;
    }
    
    public void setPlayerName(String strPlayerName){
        this.strPlayerName = strPlayerName;
    }
    
    @JsonProperty(value = "strPassword")
    @Column(name="strPassword", nullable=false, length=256)
    @Field
    public String getPassword(){
        return this.strPassword;
    }
    
    public void setPassword(String strPassword){
        this.strPassword = strPassword;
    }
    
    @JsonProperty(value = "strUniqueName")
    @Column(name="strUniqueName", nullable=false, length=50)
    @Field
    public String getUniqueName(){
        return this.strUniqueName;
    }
    
    public void setUniqueName(String strUniqueName){
        this.strUniqueName = strUniqueName;
    }
    
    @JsonProperty(value = "nPort")
    @Column(name="nPort", nullable=false)
    @Field
    public int getPort(){
        return this.nPort;
    }
    
    public void setPort(int nPort){
        this.nPort = nPort;
    }
    
    @JsonProperty(value = "nRetryDelay")
    @Column(name="nRetryDelay", nullable=false)
    @Field
    public short getRetryDelay(){
        return this.nRetryDelay;
    }
    
    public void setRetryDelay(short nRetryDelay){
        this.nRetryDelay = nRetryDelay;
    }
    
    @JsonProperty(value = "bUsePASVMode")
    @Column(name="bUsePASVMode", nullable=false)
    @Field
    public boolean isUsePASVMode(){
        return this.bUsePASVMode;
    }
    
    public void setUsePASVMode(boolean bUsePASVMode){
        this.bUsePASVMode = bUsePASVMode;
    }
    
    @JsonProperty(value = "bUseFirewall")
    @Column(name="bUseFirewall", nullable=false)
    @Field
    public boolean isUseFirewall(){
        return this.bUseFirewall;
    }
    
    public void setUseFirewall(boolean bUseFirewall){
        this.bUseFirewall = bUseFirewall;
    }
    
    @JsonProperty(value = "strDiskSerial")
    @Column(name="strDiskSerial", nullable=false, length=50)
    @Field
    public String getDiskSerial(){
        return this.strDiskSerial;
    }
    
    public void setDiskSerial(String strDiskSerial){
        this.strDiskSerial = strDiskSerial;
    }
    
    @JsonProperty(value = "strLocation")
    @Column(name="strLocation", length=255)
    @Field
    public String getLocation(){
        return this.strLocation;
    }
    
    public void setLocation(String strLocation){
        this.strLocation = strLocation;
    }
    
    @JsonProperty(value = "nFtpPeriod")
    @Column(name="nFtpPeriod", nullable=false)
    @Field
    public short getFtpPeriod(){
        return this.nFtpPeriod;
    }
    
    public void setFtpPeriod(short nFtpPeriod){
        this.nFtpPeriod = nFtpPeriod;
    }
    
    @JsonProperty(value = "nBeforeDay")
    @Column(name="nBeforeDay", nullable=false)
    @Field
    public short getBeforeDay(){
        return this.nBeforeDay;
    }
    
    public void setBeforeDay(short nBeforeDay){
        this.nBeforeDay = nBeforeDay;
    }
    
    @JsonProperty(value = "dwFtpContent")
    @Column(name="dwFtpContent", nullable=false)
    @Field
    public int getFtpContent(){
        return this.dwFtpContent;
    }
    
    public void setFtpContent(int dwFtpContent){
        this.dwFtpContent = dwFtpContent;
    }
    
    @JsonProperty(value = "bReplaceFile")
    @Column(name="bReplaceFile", nullable=false)
    @Field
    public boolean isReplaceFile(){
        return this.bReplaceFile;
    }
    
    public void setReplaceFile(boolean bReplaceFile){
        this.bReplaceFile = bReplaceFile;
    }
    
    @JsonProperty(value = "strMACAddress")
    @Column(name="strMACAddress", nullable=false, length=20)
    @Field
    public String getMACAddress(){
        return this.strMACAddress;
    }
    
    public void setMACAddress(String strMACAddress){
        this.strMACAddress = strMACAddress;
    }
    
    @JsonProperty(value = "strMACAddress1")
    @Column(name="strMACAddress1", nullable=false, length=20)
    @Field
    public String getMACAddress1(){
        return this.strMACAddress1;
    }
    
    public void setMACAddress1(String strMACAddress1){
        this.strMACAddress1 = strMACAddress1;
    }
    
    @JsonProperty(value = "strLocalAddress")
    @Column(name="strLocalAddress", nullable=false, length=20)
    @Field
    public String getLocalAddress(){
        return this.strLocalAddress;
    }
    
    public void setLocalAddress(String strLocalAddress){
        this.strLocalAddress = strLocalAddress;
    }
    
    @JsonProperty(value = "strLocalLogin")
    @Column(name="strLocalLogin", nullable=false, length=20)
    @Field
    public String getLocalLogin(){
        return this.strLocalLogin;
    }
    
    public void setLocalLogin(String strLocalLogin){
        this.strLocalLogin = strLocalLogin;
    }
    
    @JsonProperty(value = "strLocalPassword")
    @Column(name="strLocalPassword", nullable=false, length=20)
    @Field
    public String getLocalPassword(){
        return this.strLocalPassword;
    }
    
    public void setLocalPassword(String strLocalPassword){
        this.strLocalPassword = strLocalPassword;
    }
    
    @JsonProperty(value = "nLocalPort")
    @Column(name="nLocalPort", nullable=false)
    @Field
    public int getLocalPort(){
        return this.nLocalPort;
    }
    
    public void setLocalPort(int nLocalPort){
        this.nLocalPort = nLocalPort;
    }
    
    @JsonProperty(value = "strTimeOuts")
    @Column(name="strTimeOuts", nullable=false, length=8)
    @Field
    public String getTimeOuts(){
        return this.strTimeOuts;
    }
    
    public void setTimeOuts(String strTimeOuts){
        this.strTimeOuts = strTimeOuts;
    }
    
    @JsonProperty(value = "strDeviceID")
    @Column(name="strDeviceID", nullable=false, length=50)
    @Field
    public String getDeviceID(){
        return this.strDeviceID;
    }
    
    public void setDeviceID(String strDeviceID){
        this.strDeviceID = strDeviceID;
    }
    
    @JsonProperty(value = "strMACID")
    @Column(name="strMACID", nullable=false, length=20)
    @Field
    public String getMACID(){
        return this.strMACID;
    }
    
    public void setMACID(String strMACID){
        this.strMACID = strMACID;
    }
    
    @JsonProperty(value = "strPublicIP")
    @Column(name="strPublicIP", nullable=false, length=20)
    @Field
    public String getPublicIP(){
        return this.strPublicIP;
    }
    
    public void setPublicIP(String strPublicIP){
        this.strPublicIP = strPublicIP;
    }
    
    @JsonProperty(value = "bBinary")
    @Column(name="bBinary", nullable=false)
    @Field
    public boolean isBinary(){
        return this.bBinary;
    }
    
    public void setBinary(boolean bBinary){
        this.bBinary = bBinary;
    }
    
    @JsonProperty(value = "dbLimit")
    @Column(name="dbLimit", nullable=false)
    @Field
    public Long getDbLimit(){
        return this.dbLimit;
    }
    
    public void setDbLimit(Long dbLimit){
        this.dbLimit = dbLimit;
    }
    
    @JsonProperty(value = "dwConnectionTimeout")
    @Column(name="dwConnectionTimeout", nullable=false)
    @Field
    public int getConnectionTimeout(){
        return this.dwConnectionTimeout;
    }
    
    public void setConnectionTimeout(int dwConnectionTimeout){
        this.dwConnectionTimeout = dwConnectionTimeout;
    }
    
    @JsonProperty(value = "sUserAgent")
    @Column(name="sUserAgent", length=255)
    @Field
    public String getUserAgent(){
        return this.sUserAgent;
    }
    
    public void setUserAgent(String sUserAgent){
        this.sUserAgent = sUserAgent;
    }
    
    @JsonProperty(value = "sProxyServer")
    @Column(name="sProxyServer", length=255)
    @Field
    public String getProxyServer(){
        return this.sProxyServer;
    }
    
    public void setProxyServer(String sProxyServer){
        this.sProxyServer = sProxyServer;
    }
    
    @JsonProperty(value = "ConnectionType")
    @Column(name="ConnectionType")
    @Field
    public Short getConnectionType(){
        return this.connectionType;
    }
    
    public void setConnectionType(Short connectionType){
        this.connectionType = connectionType;
    }
    
    @JsonProperty(value = "dwReadBufferSize")
    @Column(name="dwReadBufferSize")
    @Field
    public Integer getReadBufferSize(){
        return this.dwReadBufferSize;
    }
    
    public void setReadBufferSize(Integer dwReadBufferSize){
        this.dwReadBufferSize = dwReadBufferSize;
    }
    
    @JsonProperty(value = "dtRegTime")
    @JsonSerialize(using = JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dtRegTime", length=19)
    @Field
    public Date getRegTime(){
        return this.dtRegTime;
    }
    
    public void setRegTime(Date dtRegTime){
        this.dtRegTime = dtRegTime;
    }
    
    @JsonProperty(value = "strMDSVersion")
    @Column(name="strMDSVersion", length=255)
    @Field
    public String getMDSVersion(){
        return this.strMDSVersion;
    }
    
    public void setMDSVersion(String strMDSVersion){
        this.strMDSVersion = strMDSVersion;
    }
    
    @JsonProperty(value = "bOnline")
    @Column(name="bOnline", nullable=false)
    @Field
    public boolean isOnline(){
        return this.bOnline;
    }
    
    public void setOnline(boolean bOnline){
        this.bOnline = bOnline;
    }
    
    @JsonProperty(value = "dtLastOnlineTime")
    @JsonSerialize(using = JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dtLastOnlineTime", length=19)
    @Field
    public Date getLastOnlineTime(){
        return this.dtLastOnlineTime;
    }
    
    public void setLastOnlineTime(Date dtLastOnlineTime){
        this.dtLastOnlineTime = dtLastOnlineTime;
    }
    
    @JsonProperty(value = "strPhoneNumber")
    @Column(name="strPhoneNumber", nullable=false, length=21)
    @Field
    public String getPhoneNumber(){
        return this.strPhoneNumber;
    }
    
    public void setPhoneNumber(String strPhoneNumber){
        this.strPhoneNumber = strPhoneNumber;
    }
    
    @JsonProperty(value = "strPhoneNumberServer")
    @Column(name="strPhoneNumberServer", nullable=false, length=21)
    @Field
    public String getPhoneNumberServer(){
        return this.strPhoneNumberServer;
    }
    
    public void setPhoneNumberServer(String strPhoneNumberServer){
        this.strPhoneNumberServer = strPhoneNumberServer;
    }
    
    @JsonProperty(value = "guidReg")
    @Column(name="guidReg", length=38)
    @Field
    public String getGuidReg(){
        return this.guidReg;
    }
    
    public void setGuidReg(String guidReg){
        this.guidReg = guidReg;
    }
    
    @JsonProperty(value = "dtStartup")
    @JsonSerialize(using = JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dtStartup", nullable=false, length=19)
    @Field
    public Date getStartup(){
        return this.dtStartup;
    }
    
    public void setStartup(Date dtStartup){
        this.dtStartup = dtStartup;
    }
    
    @JsonProperty(value = "dtShutdown")
    @JsonSerialize(using = JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dtShutdown", nullable=false, length=19)
    @Field
    public Date getShutdown(){
        return this.dtShutdown;
    }
    
    public void setShutdown(Date dtShutdown){
        this.dtShutdown = dtShutdown;
    }
    
    @JsonProperty(value = "dtLastSyncTime")
    @JsonSerialize(using = JsonDateSerializer.class)
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dtLastSyncTime", nullable=false, length=19)
    @Field
    public Date getLastSyncTime(){
        return this.dtLastSyncTime;
    }
    
    public void setLastSyncTime(Date dtLastSyncTime){
        this.dtLastSyncTime = dtLastSyncTime;
    }
    
	@ManyToMany(mappedBy = "players", fetch=FetchType.LAZY)
	@OrderBy("id") 
	@Fetch(FetchMode.SUBSELECT)
	@NotFound(action = NotFoundAction.IGNORE)
	
	public List<AHMessage> getAHMessages() {
		return aHMessages;
	}
		
	public void setAHMessages(List<AHMessage> aHMessages) {
		this.aHMessages = aHMessages;
	}
	
	/**
	 * @return the aHPlaylists
	 */
	@ManyToMany(mappedBy = "players", fetch=FetchType.LAZY)
	@OrderBy("id") 
	@Fetch(FetchMode.SUBSELECT)
	@NotFound(action = NotFoundAction.IGNORE)
	
	public List<AHPlaylist> getAHPlaylists() {
		return aHPlaylists;
	}

	/**
	 * @param aHPlaylists the aHPlaylists to set
	 */
	public void setAHPlaylists(List<AHPlaylist> aHPlaylists) {
		this.aHPlaylists = aHPlaylists;
	}

	@ManyToMany(mappedBy = "players", fetch=FetchType.LAZY)
	@OrderBy("id") 
	@Fetch(FetchMode.SUBSELECT)
	@NotFound(action = NotFoundAction.IGNORE)
	
	public List<FileTransferTask> getFileTransferTasks() {
		return fileTransferTask;
	}
		
	public void setFileTransferTasks(List<FileTransferTask> fileTransferTask) {
		this.fileTransferTask = fileTransferTask;
	}
	
	/**
	 * @return the playerTuner
	 */
	@OneToMany(cascade=CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true, mappedBy="player")
	@OrderBy(value="id") 
	@Fetch(FetchMode.SUBSELECT)
	@NotFound(action = NotFoundAction.IGNORE)
	
	public List<PlayerTuner> getPlayerTuner() {
		return playerTuner;
	}

	/**
	 * @param playerTuner the playerTuner to set
	 */
	public void setPlayerTuner(List<PlayerTuner> playerTuner) {
		this.playerTuner = playerTuner;
	}

	/**
	 * @return the playerOutputs
	 */
	@OneToMany(cascade=CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true, mappedBy="player")
	@OrderBy(value="id") 
	@Fetch(FetchMode.SUBSELECT)
	@NotFound(action = NotFoundAction.IGNORE)
	
	public List<PlayerOutput> getPlayerOutputs() {
		return playerOutputs;
	}

	/**
	 * @param playerOutputs the playerOutputs to set
	 */
	public void setPlayerOutputs(List<PlayerOutput> playerOutputs) {
		this.playerOutputs = playerOutputs;
	}

	/**
	 * @return the playerStatuses
	 */
	@OneToMany(cascade=CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true, mappedBy="player")
	@OrderBy(value="id") 
	@Fetch(FetchMode.SUBSELECT)
	@NotFound(action = NotFoundAction.IGNORE)
	
	public List<PlayerStatus> getPlayerStatuses() {
		return playerStatuses;
	}

	/**
	 * @param playerStatuses the playerStatuses to set
	 */
	public void setPlayerStatuses(List<PlayerStatus> playerStatuses) {
		this.playerStatuses = playerStatuses;
	}

	@ManyToMany(mappedBy = "players", fetch=FetchType.LAZY)
	@OrderBy("id") 
	@Fetch(FetchMode.SUBSELECT)
	@NotFound(action = NotFoundAction.IGNORE)
	
	public List<PlayerTaskScheduler> getPlayerTaskSchedulers() {
		return playerTaskSchedulers;
	}
		
	public void setPlayerTaskSchedulers(List<PlayerTaskScheduler> playerTaskSchedulers) {
		this.playerTaskSchedulers = playerTaskSchedulers;
	}
	
    @ManyToOne(optional=true, fetch = FetchType.LAZY)
   	@JoinColumn(name="organization_id", nullable=true)
   	@NotFound(action = NotFoundAction.IGNORE)
   	@JsonIgnore
   	public Organization getOrganization() {
   		return organization;
   	}

   	public void setOrganization(Organization organization) {
   		this.organization = organization;
   	}


    /**
    * {@inheritDoc}
    */
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Player pojo = (Player)o;
        return (new EqualsBuilder()
             .append(strServerAddress, pojo.strServerAddress)
             .append(nRetries, pojo.nRetries)
             .append(strDescription, pojo.strDescription)
             .append(strLogin, pojo.strLogin)
             .append(strPlayerName, pojo.strPlayerName)
             .append(strPassword, pojo.strPassword)
             .append(strUniqueName, pojo.strUniqueName)
             .append(nPort, pojo.nPort)
             .append(nRetryDelay, pojo.nRetryDelay)
             .append(bUsePASVMode, pojo.bUsePASVMode)
             .append(bUseFirewall, pojo.bUseFirewall)
             .append(strDiskSerial, pojo.strDiskSerial)
             .append(strLocation, pojo.strLocation)
             .append(nFtpPeriod, pojo.nFtpPeriod)
             .append(nBeforeDay, pojo.nBeforeDay)
             .append(dwFtpContent, pojo.dwFtpContent)
             .append(bReplaceFile, pojo.bReplaceFile)
             .append(strMACAddress, pojo.strMACAddress)
             .append(strMACAddress1, pojo.strMACAddress1)
             .append(strLocalAddress, pojo.strLocalAddress)
             .append(strLocalLogin, pojo.strLocalLogin)
             .append(strLocalPassword, pojo.strLocalPassword)
             .append(nLocalPort, pojo.nLocalPort)
             .append(strTimeOuts, pojo.strTimeOuts)
             .append(strDeviceID, pojo.strDeviceID)
             .append(strMACID, pojo.strMACID)
             .append(strPublicIP, pojo.strPublicIP)
             .append(bBinary, pojo.bBinary)
             .append(dbLimit, pojo.dbLimit)
             .append(dwConnectionTimeout, pojo.dwConnectionTimeout)
             .append(sUserAgent, pojo.sUserAgent)
             .append(sProxyServer, pojo.sProxyServer)
             .append(connectionType, pojo.connectionType)
             .append(dwReadBufferSize, pojo.dwReadBufferSize)
             .append(dtRegTime, pojo.dtRegTime)
             .append(strMDSVersion, pojo.strMDSVersion)
             .append(bOnline, pojo.bOnline)
             .append(dtLastOnlineTime, pojo.dtLastOnlineTime)
             .append(strPhoneNumber, pojo.strPhoneNumber)
             .append(strPhoneNumberServer, pojo.strPhoneNumberServer)
             .append(guidReg, pojo.guidReg)
             .append(dtStartup, pojo.dtStartup)
             .append(dtShutdown, pojo.dtShutdown)
             .append(dtLastSyncTime, pojo.dtLastSyncTime)
             ).isEquals();
    }


    /**
    * {@inheritDoc}
    */
     public int hashCode() {
        return   new  HashCodeBuilder( 17 ,  37 )
             .append(strServerAddress)
             .append(nRetries)
             .append(strDescription)
             .append(strLogin)
             .append(strPlayerName)
             .append(strPassword)
             .append(strUniqueName)
             .append(nPort)
             .append(nRetryDelay)
             .append(bUsePASVMode)
             .append(bUseFirewall)
             .append(strDiskSerial)
             .append(strLocation)
             .append(nFtpPeriod)
             .append(nBeforeDay)
             .append(dwFtpContent)
             .append(bReplaceFile)
             .append(strMACAddress)
             .append(strMACAddress1)
             .append(strLocalAddress)
             .append(strLocalLogin)
             .append(strLocalPassword)
             .append(nLocalPort)
             .append(strTimeOuts)
             .append(strDeviceID)
             .append(strMACID)
             .append(strPublicIP)
             .append(bBinary)
             .append(dbLimit)
             .append(dwConnectionTimeout)
             .append(sUserAgent)
             .append(sProxyServer)
             .append(connectionType)
             .append(dwReadBufferSize)
             .append(dtRegTime)
             .append(strMDSVersion)
             .append(bOnline)
             .append(dtLastOnlineTime)
             .append(strPhoneNumber)
             .append(strPhoneNumberServer)
             .append(guidReg)
             .append(dtStartup)
             .append(dtShutdown)
             .append(dtLastSyncTime)
             .toHashCode();
    }


    /**
    * {@inheritDoc}
    */
     public String toString() {
        StringBuffer sb = new StringBuffer(getClass().getSimpleName());
        sb.append(" [");
        sb.append("id").append("='").append(getId()).append("', ");
        sb.append("strServerAddress").append("='").append(getServerAddress()).append("', ");
        sb.append("nRetries").append("='").append(getRetries()).append("', ");
        sb.append("strDescription").append("='").append(getDescription()).append("', ");
        sb.append("strLogin").append("='").append(getLogin()).append("', ");
        sb.append("strPlayerName").append("='").append(getPlayerName()).append("', ");
        sb.append("strPassword").append("='").append(getPassword()).append("', ");
        sb.append("strUniqueName").append("='").append(getUniqueName()).append("', ");
        sb.append("nPort").append("='").append(getPort()).append("', ");
        sb.append("nRetryDelay").append("='").append(getRetryDelay()).append("', ");
        sb.append("bUsePASVMode").append("='").append(isUsePASVMode()).append("', ");
        sb.append("bUseFirewall").append("='").append(isUseFirewall()).append("', ");
        sb.append("strDiskSerial").append("='").append(getDiskSerial()).append("', ");
        sb.append("strLocation").append("='").append(getLocation()).append("', ");
        sb.append("nFtpPeriod").append("='").append(getFtpPeriod()).append("', ");
        sb.append("nBeforeDay").append("='").append(getBeforeDay()).append("', ");
        sb.append("dwFtpContent").append("='").append(getFtpContent()).append("', ");
        sb.append("bReplaceFile").append("='").append(isReplaceFile()).append("', ");
        sb.append("strMACAddress").append("='").append(getMACAddress()).append("', ");
        sb.append("strMACAddress1").append("='").append(getMACAddress1()).append("', ");
        sb.append("strLocalAddress").append("='").append(getLocalAddress()).append("', ");
        sb.append("strLocalLogin").append("='").append(getLocalLogin()).append("', ");
        sb.append("strLocalPassword").append("='").append(getLocalPassword()).append("', ");
        sb.append("nLocalPort").append("='").append(getLocalPort()).append("', ");
        sb.append("strTimeOuts").append("='").append(getTimeOuts()).append("', ");
        sb.append("strDeviceID").append("='").append(getDeviceID()).append("', ");
        sb.append("strMACID").append("='").append(getMACID()).append("', ");
        sb.append("strPublicIP").append("='").append(getPublicIP()).append("', ");
        sb.append("bBinary").append("='").append(isBinary()).append("', ");
        sb.append("dbLimit").append("='").append(getDbLimit()).append("', ");
        sb.append("dwConnectionTimeout").append("='").append(getConnectionTimeout()).append("', ");
        sb.append("sUserAgent").append("='").append(getUserAgent()).append("', ");
        sb.append("sProxyServer").append("='").append(getProxyServer()).append("', ");
        sb.append("connectionType").append("='").append(getConnectionType()).append("', ");
        sb.append("dwReadBufferSize").append("='").append(getReadBufferSize()).append("', ");
        sb.append("dtRegTime").append("='").append(getRegTime()).append("', ");
        sb.append("strMDSVersion").append("='").append(getMDSVersion()).append("', ");
        sb.append("bOnline").append("='").append(isOnline()).append("', ");
        sb.append("dtLastOnlineTime").append("='").append(getLastOnlineTime()).append("', ");
        sb.append("strPhoneNumber").append("='").append(getPhoneNumber()).append("', ");
        sb.append("strPhoneNumberServer").append("='").append(getPhoneNumberServer()).append("', ");
        sb.append("guidReg").append("='").append(getGuidReg()).append("', ");
        sb.append("dtStartup").append("='").append(getStartup()).append("', ");
        sb.append("dtShutdown").append("='").append(getShutdown()).append("', ");
        sb.append("dtLastSyncTime").append("='").append(getLastSyncTime()).append("', ");
        sb.append("]");
        
        return sb.toString();
    }

}